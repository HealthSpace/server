{"abi": [{"anonymous": false, "inputs": [{"indexed": true, "internalType": "address", "name": "previousOwner", "type": "address"}, {"indexed": true, "internalType": "address", "name": "newOwner", "type": "address"}], "name": "OwnershipTransferred", "type": "event"}, {"anonymous": false, "inputs": [{"indexed": true, "internalType": "address", "name": "_from", "type": "address"}, {"indexed": true, "internalType": "string", "name": "_ethToken", "type": "string"}], "name": "RetrieveHashData", "type": "event"}, {"anonymous": false, "inputs": [{"indexed": true, "internalType": "address", "name": "_from", "type": "address"}, {"indexed": true, "internalType": "string", "name": "_ethToken", "type": "string"}], "name": "RetrievePrivateKey", "type": "event"}, {"inputs": [{"internalType": "string", "name": "_ehToken", "type": "string"}, {"internalType": "string", "name": "_userHash", "type": "string"}], "name": "addUserHash", "outputs": [], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [{"internalType": "string", "name": "_ehToken", "type": "string"}, {"internalType": "string", "name": "_privateKey", "type": "string"}], "name": "addUserKey", "outputs": [], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [{"internalType": "string", "name": "_ehToken", "type": "string"}], "name": "getUserHashData", "outputs": [{"internalType": "string", "name": "", "type": "string"}], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [{"internalType": "string", "name": "_ehToken", "type": "string"}], "name": "getUserKey", "outputs": [{"internalType": "string", "name": "", "type": "string"}], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [], "name": "owner", "outputs": [{"internalType": "address", "name": "", "type": "address"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "renounceOwnership", "outputs": [], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [{"internalType": "address", "name": "newOwner", "type": "address"}], "name": "transferOwnership", "outputs": [], "stateMutability": "nonpayable", "type": "function"}], "allSourcePaths": {"0": "/home/anonshubh/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/access/Ownable.sol", "1": "/home/anonshubh/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/utils/Context.sol", "2": "contracts/EMR.sol"}, "ast": {"absolutePath": "contracts/EMR.sol", "exportedSymbols": {"Context": [259], "EMR": [132], "Ownable": [237]}, "id": 133, "license": "MIT", "nodeType": "SourceUnit", "nodes": [{"id": 1, "literals": ["solidity", "^", "0.8"], "nodeType": "PragmaDirective", "src": "33:21:2"}, {"absolutePath": "/home/anonshubh/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/access/Ownable.sol", "file": "@openzeppelin/contracts/access/Ownable.sol", "id": 2, "nameLocation": "-1:-1:-1", "nodeType": "ImportDirective", "scope": 133, "sourceUnit": 238, "src": "56:52:2", "symbolAliases": [], "unitAlias": ""}, {"abstract": false, "baseContracts": [{"baseName": {"id": 3, "name": "Ownable", "nodeType": "IdentifierPath", "referencedDeclaration": 237, "src": "126:7:2"}, "id": 4, "nodeType": "InheritanceSpecifier", "src": "126:7:2"}], "canonicalName": "EMR", "contractDependencies": [], "contractKind": "contract", "fullyImplemented": true, "id": 132, "linearizedBaseContracts": [132, 237, 259], "name": "EMR", "nameLocation": "119:3:2", "nodeType": "ContractDefinition", "nodes": [{"canonicalName": "EMR.UserDetails", "id": 11, "members": [{"constant": false, "id": 6, "mutability": "mutable", "name": "privateKey", "nameLocation": "176:10:2", "nodeType": "VariableDeclaration", "scope": 11, "src": "169:17:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_string_storage_ptr", "typeString": "string"}, "typeName": {"id": 5, "name": "string", "nodeType": "ElementaryTypeName", "src": "169:6:2", "typeDescriptions": {"typeIdentifier": "t_string_storage_ptr", "typeString": "string"}}, "visibility": "internal"}, {"constant": false, "id": 8, "mutability": "mutable", "name": "hashData", "nameLocation": "203:8:2", "nodeType": "VariableDeclaration", "scope": 11, "src": "196:15:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_string_storage_ptr", "typeString": "string"}, "typeName": {"id": 7, "name": "string", "nodeType": "ElementaryTypeName", "src": "196:6:2", "typeDescriptions": {"typeIdentifier": "t_string_storage_ptr", "typeString": "string"}}, "visibility": "internal"}, {"constant": false, "id": 10, "mutability": "mutable", "name": "isActive", "nameLocation": "226:8:2", "nodeType": "VariableDeclaration", "scope": 11, "src": "221:13:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "typeName": {"id": 9, "name": "bool", "nodeType": "ElementaryTypeName", "src": "221:4:2", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "visibility": "internal"}], "name": "UserDetails", "nameLocation": "147:11:2", "nodeType": "StructDefinition", "scope": 132, "src": "140:101:2", "visibility": "public"}, {"anonymous": false, "id": 17, "name": "RetrieveHashData", "nameLocation": "253:16:2", "nodeType": "EventDefinition", "parameters": {"id": 16, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 13, "indexed": true, "mutability": "mutable", "name": "_from", "nameLocation": "286:5:2", "nodeType": "VariableDeclaration", "scope": 17, "src": "270:21:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 12, "name": "address", "nodeType": "ElementaryTypeName", "src": "270:7:2", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 15, "indexed": true, "mutability": "mutable", "name": "_ethToken", "nameLocation": "308:9:2", "nodeType": "VariableDeclaration", "scope": 17, "src": "293:24:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string"}, "typeName": {"id": 14, "name": "string", "nodeType": "ElementaryTypeName", "src": "293:6:2", "typeDescriptions": {"typeIdentifier": "t_string_storage_ptr", "typeString": "string"}}, "visibility": "internal"}], "src": "269:49:2"}, "src": "247:72:2"}, {"anonymous": false, "id": 23, "name": "RetrievePrivateKey", "nameLocation": "330:18:2", "nodeType": "EventDefinition", "parameters": {"id": 22, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 19, "indexed": true, "mutability": "mutable", "name": "_from", "nameLocation": "365:5:2", "nodeType": "VariableDeclaration", "scope": 23, "src": "349:21:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 18, "name": "address", "nodeType": "ElementaryTypeName", "src": "349:7:2", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 21, "indexed": true, "mutability": "mutable", "name": "_ethToken", "nameLocation": "387:9:2", "nodeType": "VariableDeclaration", "scope": 23, "src": "372:24:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string"}, "typeName": {"id": 20, "name": "string", "nodeType": "ElementaryTypeName", "src": "372:6:2", "typeDescriptions": {"typeIdentifier": "t_string_storage_ptr", "typeString": "string"}}, "visibility": "internal"}], "src": "348:49:2"}, "src": "324:74:2"}, {"constant": false, "id": 28, "mutability": "mutable", "name": "patient", "nameLocation": "435:7:2", "nodeType": "VariableDeclaration", "scope": 132, "src": "404:38:2", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_struct$_UserDetails_$11_storage_$", "typeString": "mapping(string => struct EMR.UserDetails)"}, "typeName": {"id": 27, "keyType": {"id": 24, "name": "string", "nodeType": "ElementaryTypeName", "src": "412:6:2", "typeDescriptions": {"typeIdentifier": "t_string_storage_ptr", "typeString": "string"}}, "nodeType": "Mapping", "src": "404:30:2", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_struct$_UserDetails_$11_storage_$", "typeString": "mapping(string => struct EMR.UserDetails)"}, "valueType": {"id": 26, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 25, "name": "UserDetails", "nodeType": "IdentifierPath", "referencedDeclaration": 11, "src": "422:11:2"}, "referencedDeclaration": 11, "src": "422:11:2", "typeDescriptions": {"typeIdentifier": "t_struct$_UserDetails_$11_storage_ptr", "typeString": "struct EMR.UserDetails"}}}, "visibility": "internal"}, {"body": {"id": 54, "nodeType": "Block", "src": "575:173:2", "statements": [{"expression": {"arguments": [{"expression": {"baseExpression": {"id": 36, "name": "patient", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 28, "src": "593:7:2", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_struct$_UserDetails_$11_storage_$", "typeString": "mapping(string memory => struct EMR.UserDetails storage ref)"}}, "id": 38, "indexExpression": {"id": 37, "name": "_ehToken", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 30, "src": "601:8:2", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "593:17:2", "typeDescriptions": {"typeIdentifier": "t_struct$_UserDetails_$11_storage", "typeString": "struct EMR.UserDetails storage ref"}}, "id": 39, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "isActive", "nodeType": "MemberAccess", "referencedDeclaration": 10, "src": "593:26:2", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "4e6f2050617469656e7420466f756e6421", "id": 40, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "621:19:2", "typeDescriptions": {"typeIdentifier": "t_stringliteral_3816d7abfbe8f08ecb76bc1e1c3fc409e75d4a4f9c6128d6f7af052b197d5f2e", "typeString": "literal_string \"No Patient Found!\""}, "value": "No Patient Found!"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_3816d7abfbe8f08ecb76bc1e1c3fc409e75d4a4f9c6128d6f7af052b197d5f2e", "typeString": "literal_string \"No Patient Found!\""}], "id": 35, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "585:7:2", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 41, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "585:56:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 42, "nodeType": "ExpressionStatement", "src": "585:56:2"}, {"eventCall": {"arguments": [{"expression": {"id": 44, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "675:3:2", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 45, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sender", "nodeType": "MemberAccess", "src": "675:10:2", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 46, "name": "_ehToken", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 30, "src": "687:8:2", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}], "id": 43, "name": "RetrievePrivateKey", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 23, "src": "656:18:2", "typeDescriptions": {"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_string_memory_ptr_$returns$__$", "typeString": "function (address,string memory)"}}, "id": 47, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "656:40:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 48, "nodeType": "EmitStatement", "src": "651:45:2"}, {"expression": {"expression": {"baseExpression": {"id": 49, "name": "patient", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 28, "src": "713:7:2", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_struct$_UserDetails_$11_storage_$", "typeString": "mapping(string memory => struct EMR.UserDetails storage ref)"}}, "id": 51, "indexExpression": {"id": 50, "name": "_ehToken", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 30, "src": "721:8:2", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "713:17:2", "typeDescriptions": {"typeIdentifier": "t_struct$_UserDetails_$11_storage", "typeString": "struct EMR.UserDetails storage ref"}}, "id": 52, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "privateKey", "nodeType": "MemberAccess", "referencedDeclaration": 6, "src": "713:28:2", "typeDescriptions": {"typeIdentifier": "t_string_storage", "typeString": "string storage ref"}}, "functionReturnParameters": 34, "id": 53, "nodeType": "Return", "src": "706:35:2"}]}, "functionSelector": "2336b932", "id": 55, "implemented": true, "kind": "function", "modifiers": [], "name": "getUserKey", "nameLocation": "489:10:2", "nodeType": "FunctionDefinition", "parameters": {"id": 31, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 30, "mutability": "mutable", "name": "_ehToken", "nameLocation": "514:8:2", "nodeType": "VariableDeclaration", "scope": 55, "src": "500:22:2", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string"}, "typeName": {"id": 29, "name": "string", "nodeType": "ElementaryTypeName", "src": "500:6:2", "typeDescriptions": {"typeIdentifier": "t_string_storage_ptr", "typeString": "string"}}, "visibility": "internal"}], "src": "499:24:2"}, "returnParameters": {"id": 34, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 33, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 55, "src": "556:13:2", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string"}, "typeName": {"id": 32, "name": "string", "nodeType": "ElementaryTypeName", "src": "556:6:2", "typeDescriptions": {"typeIdentifier": "t_string_storage_ptr", "typeString": "string"}}, "visibility": "internal"}], "src": "555:15:2"}, "scope": 132, "src": "480:268:2", "stateMutability": "nonpayable", "virtual": false, "visibility": "public"}, {"body": {"id": 81, "nodeType": "Block", "src": "854:169:2", "statements": [{"expression": {"arguments": [{"expression": {"baseExpression": {"id": 63, "name": "patient", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 28, "src": "872:7:2", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_struct$_UserDetails_$11_storage_$", "typeString": "mapping(string memory => struct EMR.UserDetails storage ref)"}}, "id": 65, "indexExpression": {"id": 64, "name": "_ehToken", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 57, "src": "880:8:2", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "872:17:2", "typeDescriptions": {"typeIdentifier": "t_struct$_UserDetails_$11_storage", "typeString": "struct EMR.UserDetails storage ref"}}, "id": 66, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "isActive", "nodeType": "MemberAccess", "referencedDeclaration": 10, "src": "872:26:2", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "4e6f2050617469656e7420466f756e6421", "id": 67, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "900:19:2", "typeDescriptions": {"typeIdentifier": "t_stringliteral_3816d7abfbe8f08ecb76bc1e1c3fc409e75d4a4f9c6128d6f7af052b197d5f2e", "typeString": "literal_string \"No Patient Found!\""}, "value": "No Patient Found!"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_3816d7abfbe8f08ecb76bc1e1c3fc409e75d4a4f9c6128d6f7af052b197d5f2e", "typeString": "literal_string \"No Patient Found!\""}], "id": 62, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "864:7:2", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 68, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "864:56:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 69, "nodeType": "ExpressionStatement", "src": "864:56:2"}, {"eventCall": {"arguments": [{"expression": {"id": 71, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "952:3:2", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 72, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sender", "nodeType": "MemberAccess", "src": "952:10:2", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 73, "name": "_ehToken", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 57, "src": "964:8:2", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}], "id": 70, "name": "RetrieveHashData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 17, "src": "935:16:2", "typeDescriptions": {"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_string_memory_ptr_$returns$__$", "typeString": "function (address,string memory)"}}, "id": 74, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "935:38:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 75, "nodeType": "EmitStatement", "src": "930:43:2"}, {"expression": {"expression": {"baseExpression": {"id": 76, "name": "patient", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 28, "src": "990:7:2", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_struct$_UserDetails_$11_storage_$", "typeString": "mapping(string memory => struct EMR.UserDetails storage ref)"}}, "id": 78, "indexExpression": {"id": 77, "name": "_ehToken", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 57, "src": "998:8:2", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "990:17:2", "typeDescriptions": {"typeIdentifier": "t_struct$_UserDetails_$11_storage", "typeString": "struct EMR.UserDetails storage ref"}}, "id": 79, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "hashData", "nodeType": "MemberAccess", "referencedDeclaration": 8, "src": "990:26:2", "typeDescriptions": {"typeIdentifier": "t_string_storage", "typeString": "string storage ref"}}, "functionReturnParameters": 61, "id": 80, "nodeType": "Return", "src": "983:33:2"}]}, "functionSelector": "5ce54fdb", "id": 82, "implemented": true, "kind": "function", "modifiers": [], "name": "getUserHashData", "nameLocation": "763:15:2", "nodeType": "FunctionDefinition", "parameters": {"id": 58, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 57, "mutability": "mutable", "name": "_ehToken", "nameLocation": "793:8:2", "nodeType": "VariableDeclaration", "scope": 82, "src": "779:22:2", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string"}, "typeName": {"id": 56, "name": "string", "nodeType": "ElementaryTypeName", "src": "779:6:2", "typeDescriptions": {"typeIdentifier": "t_string_storage_ptr", "typeString": "string"}}, "visibility": "internal"}], "src": "778:24:2"}, "returnParameters": {"id": 61, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 60, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 82, "src": "835:13:2", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string"}, "typeName": {"id": 59, "name": "string", "nodeType": "ElementaryTypeName", "src": "835:6:2", "typeDescriptions": {"typeIdentifier": "t_string_storage_ptr", "typeString": "string"}}, "visibility": "internal"}], "src": "834:15:2"}, "scope": 132, "src": "754:269:2", "stateMutability": "nonpayable", "virtual": false, "visibility": "public"}, {"body": {"id": 105, "nodeType": "Block", "src": "1137:102:2", "statements": [{"expression": {"id": 96, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"expression": {"baseExpression": {"id": 91, "name": "patient", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 28, "src": "1147:7:2", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_struct$_UserDetails_$11_storage_$", "typeString": "mapping(string memory => struct EMR.UserDetails storage ref)"}}, "id": 93, "indexExpression": {"id": 92, "name": "_ehToken", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 84, "src": "1155:8:2", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "1147:17:2", "typeDescriptions": {"typeIdentifier": "t_struct$_UserDetails_$11_storage", "typeString": "struct EMR.UserDetails storage ref"}}, "id": 94, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "memberName": "privateKey", "nodeType": "MemberAccess", "referencedDeclaration": 6, "src": "1147:28:2", "typeDescriptions": {"typeIdentifier": "t_string_storage", "typeString": "string storage ref"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"id": 95, "name": "_privateKey", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 86, "src": "1178:11:2", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}}, "src": "1147:42:2", "typeDescriptions": {"typeIdentifier": "t_string_storage", "typeString": "string storage ref"}}, "id": 97, "nodeType": "ExpressionStatement", "src": "1147:42:2"}, {"expression": {"id": 103, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"expression": {"baseExpression": {"id": 98, "name": "patient", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 28, "src": "1199:7:2", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_struct$_UserDetails_$11_storage_$", "typeString": "mapping(string memory => struct EMR.UserDetails storage ref)"}}, "id": 100, "indexExpression": {"id": 99, "name": "_ehToken", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 84, "src": "1207:8:2", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "1199:17:2", "typeDescriptions": {"typeIdentifier": "t_struct$_UserDetails_$11_storage", "typeString": "struct EMR.UserDetails storage ref"}}, "id": 101, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "memberName": "isActive", "nodeType": "MemberAccess", "referencedDeclaration": 10, "src": "1199:26:2", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"hexValue": "74727565", "id": 102, "isConstant": false, "isLValue": false, "isPure": true, "kind": "bool", "lValueRequested": false, "nodeType": "Literal", "src": "1228:4:2", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "value": "true"}, "src": "1199:33:2", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 104, "nodeType": "ExpressionStatement", "src": "1199:33:2"}]}, "functionSelector": "f7c89a4b", "id": 106, "implemented": true, "kind": "function", "modifiers": [{"id": 89, "kind": "modifierInvocation", "modifierName": {"id": 88, "name": "onlyOwner", "nodeType": "IdentifierPath", "referencedDeclaration": 179, "src": "1123:9:2"}, "nodeType": "ModifierInvocation", "src": "1123:9:2"}], "name": "addUserKey", "nameLocation": "1038:10:2", "nodeType": "FunctionDefinition", "parameters": {"id": 87, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 84, "mutability": "mutable", "name": "_ehToken", "nameLocation": "1063:8:2", "nodeType": "VariableDeclaration", "scope": 106, "src": "1049:22:2", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string"}, "typeName": {"id": 83, "name": "string", "nodeType": "ElementaryTypeName", "src": "1049:6:2", "typeDescriptions": {"typeIdentifier": "t_string_storage_ptr", "typeString": "string"}}, "visibility": "internal"}, {"constant": false, "id": 86, "mutability": "mutable", "name": "_privateKey", "nameLocation": "1087:11:2", "nodeType": "VariableDeclaration", "scope": 106, "src": "1073:25:2", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string"}, "typeName": {"id": 85, "name": "string", "nodeType": "ElementaryTypeName", "src": "1073:6:2", "typeDescriptions": {"typeIdentifier": "t_string_storage_ptr", "typeString": "string"}}, "visibility": "internal"}], "src": "1048:51:2"}, "returnParameters": {"id": 90, "nodeType": "ParameterList", "parameters": [], "src": "1137:0:2"}, "scope": 132, "src": "1029:210:2", "stateMutability": "nonpayable", "virtual": false, "visibility": "public"}, {"body": {"id": 130, "nodeType": "Block", "src": "1352:148:2", "statements": [{"expression": {"arguments": [{"expression": {"baseExpression": {"id": 116, "name": "patient", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 28, "src": "1397:7:2", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_struct$_UserDetails_$11_storage_$", "typeString": "mapping(string memory => struct EMR.UserDetails storage ref)"}}, "id": 118, "indexExpression": {"id": 117, "name": "_ehToken", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 108, "src": "1405:8:2", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "1397:17:2", "typeDescriptions": {"typeIdentifier": "t_struct$_UserDetails_$11_storage", "typeString": "struct EMR.UserDetails storage ref"}}, "id": 119, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "isActive", "nodeType": "MemberAccess", "referencedDeclaration": 10, "src": "1397:26:2", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "4e6f2050617469656e7420466f756e6421", "id": 120, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "1425:19:2", "typeDescriptions": {"typeIdentifier": "t_stringliteral_3816d7abfbe8f08ecb76bc1e1c3fc409e75d4a4f9c6128d6f7af052b197d5f2e", "typeString": "literal_string \"No Patient Found!\""}, "value": "No Patient Found!"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_3816d7abfbe8f08ecb76bc1e1c3fc409e75d4a4f9c6128d6f7af052b197d5f2e", "typeString": "literal_string \"No Patient Found!\""}], "id": 115, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "1389:7:2", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 121, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "1389:56:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 122, "nodeType": "ExpressionStatement", "src": "1389:56:2"}, {"expression": {"id": 128, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"expression": {"baseExpression": {"id": 123, "name": "patient", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 28, "src": "1455:7:2", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_struct$_UserDetails_$11_storage_$", "typeString": "mapping(string memory => struct EMR.UserDetails storage ref)"}}, "id": 125, "indexExpression": {"id": 124, "name": "_ehToken", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 108, "src": "1463:8:2", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "1455:17:2", "typeDescriptions": {"typeIdentifier": "t_struct$_UserDetails_$11_storage", "typeString": "struct EMR.UserDetails storage ref"}}, "id": 126, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "memberName": "hashData", "nodeType": "MemberAccess", "referencedDeclaration": 8, "src": "1455:26:2", "typeDescriptions": {"typeIdentifier": "t_string_storage", "typeString": "string storage ref"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"id": 127, "name": "_userHash", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 110, "src": "1484:9:2", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}}, "src": "1455:38:2", "typeDescriptions": {"typeIdentifier": "t_string_storage", "typeString": "string storage ref"}}, "id": 129, "nodeType": "ExpressionStatement", "src": "1455:38:2"}]}, "functionSelector": "0654aa91", "id": 131, "implemented": true, "kind": "function", "modifiers": [{"id": 113, "kind": "modifierInvocation", "modifierName": {"id": 112, "name": "onlyOwner", "nodeType": "IdentifierPath", "referencedDeclaration": 179, "src": "1338:9:2"}, "nodeType": "ModifierInvocation", "src": "1338:9:2"}], "name": "addUserHash", "nameLocation": "1254:11:2", "nodeType": "FunctionDefinition", "parameters": {"id": 111, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 108, "mutability": "mutable", "name": "_ehToken", "nameLocation": "1280:8:2", "nodeType": "VariableDeclaration", "scope": 131, "src": "1266:22:2", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string"}, "typeName": {"id": 107, "name": "string", "nodeType": "ElementaryTypeName", "src": "1266:6:2", "typeDescriptions": {"typeIdentifier": "t_string_storage_ptr", "typeString": "string"}}, "visibility": "internal"}, {"constant": false, "id": 110, "mutability": "mutable", "name": "_userHash", "nameLocation": "1304:9:2", "nodeType": "VariableDeclaration", "scope": 131, "src": "1290:23:2", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string"}, "typeName": {"id": 109, "name": "string", "nodeType": "ElementaryTypeName", "src": "1290:6:2", "typeDescriptions": {"typeIdentifier": "t_string_storage_ptr", "typeString": "string"}}, "visibility": "internal"}], "src": "1265:49:2"}, "returnParameters": {"id": 114, "nodeType": "ParameterList", "parameters": [], "src": "1352:0:2"}, "scope": 132, "src": "1245:255:2", "stateMutability": "nonpayable", "virtual": false, "visibility": "public"}], "scope": 133, "src": "110:1392:2", "usedErrors": []}], "src": "33:1470:2"}, "bytecode": "608060405234801561001057600080fd5b5061001a3361001f565b61006f565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6108c48061007e6000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c8063715018a61161005b578063715018a6146100d35780638da5cb5b146100db578063f2fde38b146100f6578063f7c89a4b1461010957600080fd5b80630654aa91146100825780632336b932146100975780635ce54fdb146100c0575b600080fd5b6100956100903660046106a3565b61011c565b005b6100aa6100a5366004610707565b6101cb565b6040516100b79190610774565b60405180910390f35b6100aa6100ce366004610707565b6102fe565b6100956103ae565b6000546040516001600160a01b0390911681526020016100b7565b6100956101043660046107a7565b6103e4565b6100956101173660046106a3565b61047f565b6000546001600160a01b0316331461014f5760405162461bcd60e51b8152600401610146906107d7565b60405180910390fd5b60018260405161015f919061080c565b9081526040519081900360200190206002015460ff166101915760405162461bcd60e51b815260040161014690610828565b806001836040516101a2919061080c565b908152602001604051809103902060010190805190602001906101c6929190610567565b505050565b60606001826040516101dd919061080c565b9081526040519081900360200190206002015460ff1661020f5760405162461bcd60e51b815260040161014690610828565b8160405161021d919061080c565b6040519081900381209033907f0b8ef4c067762d50f1ea064ddb955a43e3ea90ef38028e9705d871e03460deeb90600090a360018260405161025f919061080c565b908152604051908190036020019020805461027990610853565b80601f01602080910402602001604051908101604052809291908181526020018280546102a590610853565b80156102f25780601f106102c7576101008083540402835291602001916102f2565b820191906000526020600020905b8154815290600101906020018083116102d557829003601f168201915b50505050509050919050565b6060600182604051610310919061080c565b9081526040519081900360200190206002015460ff166103425760405162461bcd60e51b815260040161014690610828565b81604051610350919061080c565b6040519081900381209033907f5159c5254a9dc3a6d84c7424b5e5032ba56a962dfee368eb1f8bff7d119e69b890600090a3600182604051610392919061080c565b9081526020016040518091039020600101805461027990610853565b6000546001600160a01b031633146103d85760405162461bcd60e51b8152600401610146906107d7565b6103e26000610517565b565b6000546001600160a01b0316331461040e5760405162461bcd60e51b8152600401610146906107d7565b6001600160a01b0381166104735760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610146565b61047c81610517565b50565b6000546001600160a01b031633146104a95760405162461bcd60e51b8152600401610146906107d7565b806001836040516104ba919061080c565b908152602001604051809103902060000190805190602001906104de929190610567565b50600180836040516104f0919061080c565b908152604051908190036020019020600201805491151560ff199092169190911790555050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b82805461057390610853565b90600052602060002090601f01602090048101928261059557600085556105db565b82601f106105ae57805160ff19168380011785556105db565b828001600101855582156105db579182015b828111156105db5782518255916020019190600101906105c0565b506105e79291506105eb565b5090565b5b808211156105e757600081556001016105ec565b634e487b7160e01b600052604160045260246000fd5b600082601f83011261062757600080fd5b813567ffffffffffffffff8082111561064257610642610600565b604051601f8301601f19908116603f0116810190828211818310171561066a5761066a610600565b8160405283815286602085880101111561068357600080fd5b836020870160208301376000602085830101528094505050505092915050565b600080604083850312156106b657600080fd5b823567ffffffffffffffff808211156106ce57600080fd5b6106da86838701610616565b935060208501359150808211156106f057600080fd5b506106fd85828601610616565b9150509250929050565b60006020828403121561071957600080fd5b813567ffffffffffffffff81111561073057600080fd5b61073c84828501610616565b949350505050565b60005b8381101561075f578181015183820152602001610747565b8381111561076e576000848401525b50505050565b6020815260008251806020840152610793816040850160208701610744565b601f01601f19169190910160400192915050565b6000602082840312156107b957600080fd5b81356001600160a01b03811681146107d057600080fd5b9392505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6000825161081e818460208701610744565b9190910192915050565b6020808252601190820152704e6f2050617469656e7420466f756e642160781b604082015260600190565b600181811c9082168061086757607f821691505b6020821081141561088857634e487b7160e01b600052602260045260246000fd5b5091905056fea2646970667358221220c362cb982962bb45a193f2d72175af56e1842083f7cc86954aff2e5ed7a2562964736f6c634300080b0033", "bytecodeSha1": "e5f19c79c2f64d29cfa2c4f947ca110ca268a688", "compiler": {"evm_version": "istanbul", "optimizer": {"enabled": true, "runs": 200}, "version": "0.8.11+commit.d7f03943"}, "contractName": "EMR", "coverageMap": {"branches": {"0": {"Ownable.transferOwnership": {"20": [2006, 2028, true]}}, "1": {}, "2": {"EMR.addUserHash": {"17": [1397, 1423, true]}, "EMR.getUserHashData": {"19": [872, 898, true]}, "EMR.getUserKey": {"18": [593, 619, true]}}}, "statements": {"0": {"Ownable._transferOwnership": {"15": [2378, 2395], "16": [2405, 2450]}, "Ownable.owner": {"0": [1101, 1114]}, "Ownable.renounceOwnership": {"10": [1732, 1762]}, "Ownable.transferOwnership": {"11": [1998, 2071], "12": [2081, 2109]}}, "1": {"Context._msgSender": {"1": [712, 729]}}, "2": {"EMR.addUserHash": {"2": [1389, 1445], "3": [1455, 1493]}, "EMR.addUserKey": {"13": [1147, 1189], "14": [1199, 1232]}, "EMR.getUserHashData": {"7": [864, 920], "8": [930, 973], "9": [983, 1016]}, "EMR.getUserKey": {"4": [585, 641], "5": [651, 696], "6": [706, 741]}}}}, "dependencies": ["OpenZeppelin/openzeppelin-contracts@4.5.0/Context", "OpenZeppelin/openzeppelin-contracts@4.5.0/Ownable"], "deployedBytecode": "608060405234801561001057600080fd5b506004361061007d5760003560e01c8063715018a61161005b578063715018a6146100d35780638da5cb5b146100db578063f2fde38b146100f6578063f7c89a4b1461010957600080fd5b80630654aa91146100825780632336b932146100975780635ce54fdb146100c0575b600080fd5b6100956100903660046106a3565b61011c565b005b6100aa6100a5366004610707565b6101cb565b6040516100b79190610774565b60405180910390f35b6100aa6100ce366004610707565b6102fe565b6100956103ae565b6000546040516001600160a01b0390911681526020016100b7565b6100956101043660046107a7565b6103e4565b6100956101173660046106a3565b61047f565b6000546001600160a01b0316331461014f5760405162461bcd60e51b8152600401610146906107d7565b60405180910390fd5b60018260405161015f919061080c565b9081526040519081900360200190206002015460ff166101915760405162461bcd60e51b815260040161014690610828565b806001836040516101a2919061080c565b908152602001604051809103902060010190805190602001906101c6929190610567565b505050565b60606001826040516101dd919061080c565b9081526040519081900360200190206002015460ff1661020f5760405162461bcd60e51b815260040161014690610828565b8160405161021d919061080c565b6040519081900381209033907f0b8ef4c067762d50f1ea064ddb955a43e3ea90ef38028e9705d871e03460deeb90600090a360018260405161025f919061080c565b908152604051908190036020019020805461027990610853565b80601f01602080910402602001604051908101604052809291908181526020018280546102a590610853565b80156102f25780601f106102c7576101008083540402835291602001916102f2565b820191906000526020600020905b8154815290600101906020018083116102d557829003601f168201915b50505050509050919050565b6060600182604051610310919061080c565b9081526040519081900360200190206002015460ff166103425760405162461bcd60e51b815260040161014690610828565b81604051610350919061080c565b6040519081900381209033907f5159c5254a9dc3a6d84c7424b5e5032ba56a962dfee368eb1f8bff7d119e69b890600090a3600182604051610392919061080c565b9081526020016040518091039020600101805461027990610853565b6000546001600160a01b031633146103d85760405162461bcd60e51b8152600401610146906107d7565b6103e26000610517565b565b6000546001600160a01b0316331461040e5760405162461bcd60e51b8152600401610146906107d7565b6001600160a01b0381166104735760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610146565b61047c81610517565b50565b6000546001600160a01b031633146104a95760405162461bcd60e51b8152600401610146906107d7565b806001836040516104ba919061080c565b908152602001604051809103902060000190805190602001906104de929190610567565b50600180836040516104f0919061080c565b908152604051908190036020019020600201805491151560ff199092169190911790555050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b82805461057390610853565b90600052602060002090601f01602090048101928261059557600085556105db565b82601f106105ae57805160ff19168380011785556105db565b828001600101855582156105db579182015b828111156105db5782518255916020019190600101906105c0565b506105e79291506105eb565b5090565b5b808211156105e757600081556001016105ec565b634e487b7160e01b600052604160045260246000fd5b600082601f83011261062757600080fd5b813567ffffffffffffffff8082111561064257610642610600565b604051601f8301601f19908116603f0116810190828211818310171561066a5761066a610600565b8160405283815286602085880101111561068357600080fd5b836020870160208301376000602085830101528094505050505092915050565b600080604083850312156106b657600080fd5b823567ffffffffffffffff808211156106ce57600080fd5b6106da86838701610616565b935060208501359150808211156106f057600080fd5b506106fd85828601610616565b9150509250929050565b60006020828403121561071957600080fd5b813567ffffffffffffffff81111561073057600080fd5b61073c84828501610616565b949350505050565b60005b8381101561075f578181015183820152602001610747565b8381111561076e576000848401525b50505050565b6020815260008251806020840152610793816040850160208701610744565b601f01601f19169190910160400192915050565b6000602082840312156107b957600080fd5b81356001600160a01b03811681146107d057600080fd5b9392505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6000825161081e818460208701610744565b9190910192915050565b6020808252601190820152704e6f2050617469656e7420466f756e642160781b604082015260600190565b600181811c9082168061086757607f821691505b6020821081141561088857634e487b7160e01b600052602260045260246000fd5b5091905056fea2646970667358221220c362cb982962bb45a193f2d72175af56e1842083f7cc86954aff2e5ed7a2562964736f6c634300080b0033", "deployedSourceMap": "110:1392:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1245:255;;;;;;:::i;:::-;;:::i;:::-;;480:268;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;754:269;;;;;;:::i;:::-;;:::i;1668:101:0:-;;;:::i;1036:85::-;1082:7;1108:6;1036:85;;-1:-1:-1;;;;;1108:6:0;;;2542:51:3;;2530:2;2515:18;1036:85:0;2396:203:3;1918:198:0;;;;;;:::i;:::-;;:::i;1029:210:2:-;;;;;;:::i;:::-;;:::i;1245:255::-;1082:7:0;1108:6;-1:-1:-1;;;;;1108:6:0;719:10:1;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;;;;;;;;;1397:7:2::1;1405:8;1397:17;;;;;;:::i;:::-;::::0;;;::::1;::::0;;;;;::::1;::::0;;;:26:::1;;::::0;::::1;;1389:56;;;;-1:-1:-1::0;;;1389:56:2::1;;;;;;;:::i;:::-;1484:9;1455:7;1463:8;1455:17;;;;;;:::i;:::-;;;;;;;;;;;;;:26;;:38;;;;;;;;;;;;:::i;:::-;;1245:255:::0;;:::o;480:268::-;556:13;593:7;601:8;593:17;;;;;;:::i;:::-;;;;;;;;;;;;;;:26;;;;;585:56;;;;-1:-1:-1;;;585:56:2;;;;;;;:::i;:::-;687:8;656:40;;;;;;:::i;:::-;;;;;;;;;;675:10;;656:40;;;;;713:7;721:8;713:17;;;;;;:::i;:::-;;;;;;;;;;;;;;706:35;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;480:268;;;:::o;754:269::-;835:13;872:7;880:8;872:17;;;;;;:::i;:::-;;;;;;;;;;;;;;:26;;;;;864:56;;;;-1:-1:-1;;;864:56:2;;;;;;;:::i;:::-;964:8;935:38;;;;;;:::i;:::-;;;;;;;;;;952:10;;935:38;;;;;990:7;998:8;990:17;;;;;;:::i;:::-;;;;;;;;;;;;;:26;;983:33;;;;;:::i;1668:101:0:-;1082:7;1108:6;-1:-1:-1;;;;;1108:6:0;719:10:1;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;1732:30:::1;1759:1;1732:18;:30::i;:::-;1668:101::o:0;1918:198::-;1082:7;1108:6;-1:-1:-1;;;;;1108:6:0;719:10:1;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;2006:22:0;::::1;1998:73;;;::::0;-1:-1:-1;;;1998:73:0;;4470:2:3;1998:73:0::1;::::0;::::1;4452:21:3::0;4509:2;4489:18;;;4482:30;4548:34;4528:18;;;4521:62;-1:-1:-1;;;4599:18:3;;;4592:36;4645:19;;1998:73:0::1;4268:402:3::0;1998:73:0::1;2081:28;2100:8;2081:18;:28::i;:::-;1918:198:::0;:::o;1029:210:2:-;1082:7:0;1108:6;-1:-1:-1;;;;;1108:6:0;719:10:1;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;1178:11:2::1;1147:7;1155:8;1147:17;;;;;;:::i;:::-;;;;;;;;;;;;;:28;;:42;;;;;;;;;;;;:::i;:::-;;1228:4;1199:7:::0;1207:8:::1;1199:17;;;;;;:::i;:::-;::::0;;;::::1;::::0;;;;;::::1;::::0;;;:26:::1;;:33:::0;;;::::1;;-1:-1:-1::0;;1199:33:2;;::::1;::::0;;;::::1;::::0;;-1:-1:-1;;1029:210:2:o;2270:187:0:-;2343:16;2362:6;;-1:-1:-1;;;;;2378:17:0;;;-1:-1:-1;;;;;;2378:17:0;;;;;;2410:40;;2362:6;;;;;;;2410:40;;2343:16;2410:40;2333:124;2270:187;:::o;-1:-1:-1:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:127:3;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:719;189:5;242:3;235:4;227:6;223:17;219:27;209:55;;260:1;257;250:12;209:55;296:6;283:20;322:18;359:2;355;352:10;349:36;;;365:18;;:::i;:::-;440:2;434:9;408:2;494:13;;-1:-1:-1;;490:22:3;;;514:2;486:31;482:40;470:53;;;538:18;;;558:22;;;535:46;532:72;;;584:18;;:::i;:::-;624:10;620:2;613:22;659:2;651:6;644:18;705:3;698:4;693:2;685:6;681:15;677:26;674:35;671:55;;;722:1;719;712:12;671:55;786:2;779:4;771:6;767:17;760:4;752:6;748:17;735:54;833:1;826:4;821:2;813:6;809:15;805:26;798:37;853:6;844:15;;;;;;146:719;;;;:::o;870:543::-;958:6;966;1019:2;1007:9;998:7;994:23;990:32;987:52;;;1035:1;1032;1025:12;987:52;1075:9;1062:23;1104:18;1145:2;1137:6;1134:14;1131:34;;;1161:1;1158;1151:12;1131:34;1184:50;1226:7;1217:6;1206:9;1202:22;1184:50;:::i;:::-;1174:60;;1287:2;1276:9;1272:18;1259:32;1243:48;;1316:2;1306:8;1303:16;1300:36;;;1332:1;1329;1322:12;1300:36;;1355:52;1399:7;1388:8;1377:9;1373:24;1355:52;:::i;:::-;1345:62;;;870:543;;;;;:::o;1418:322::-;1487:6;1540:2;1528:9;1519:7;1515:23;1511:32;1508:52;;;1556:1;1553;1546:12;1508:52;1596:9;1583:23;1629:18;1621:6;1618:30;1615:50;;;1661:1;1658;1651:12;1615:50;1684;1726:7;1717:6;1706:9;1702:22;1684:50;:::i;:::-;1674:60;1418:322;-1:-1:-1;;;;1418:322:3:o;1745:258::-;1817:1;1827:113;1841:6;1838:1;1835:13;1827:113;;;1917:11;;;1911:18;1898:11;;;1891:39;1863:2;1856:10;1827:113;;;1958:6;1955:1;1952:13;1949:48;;;1993:1;1984:6;1979:3;1975:16;1968:27;1949:48;;1745:258;;;:::o;2008:383::-;2157:2;2146:9;2139:21;2120:4;2189:6;2183:13;2232:6;2227:2;2216:9;2212:18;2205:34;2248:66;2307:6;2302:2;2291:9;2287:18;2282:2;2274:6;2270:15;2248:66;:::i;:::-;2375:2;2354:15;-1:-1:-1;;2350:29:3;2335:45;;;;2382:2;2331:54;;2008:383;-1:-1:-1;;2008:383:3:o;2604:286::-;2663:6;2716:2;2704:9;2695:7;2691:23;2687:32;2684:52;;;2732:1;2729;2722:12;2684:52;2758:23;;-1:-1:-1;;;;;2810:31:3;;2800:42;;2790:70;;2856:1;2853;2846:12;2790:70;2879:5;2604:286;-1:-1:-1;;;2604:286:3:o;2895:356::-;3097:2;3079:21;;;3116:18;;;3109:30;3175:34;3170:2;3155:18;;3148:62;3242:2;3227:18;;2895:356::o;3256:276::-;3387:3;3425:6;3419:13;3441:53;3487:6;3482:3;3475:4;3467:6;3463:17;3441:53;:::i;:::-;3510:16;;;;;3256:276;-1:-1:-1;;3256:276:3:o;3537:341::-;3739:2;3721:21;;;3778:2;3758:18;;;3751:30;-1:-1:-1;;;3812:2:3;3797:18;;3790:47;3869:2;3854:18;;3537:341::o;3883:380::-;3962:1;3958:12;;;;4005;;;4026:61;;4080:4;4072:6;4068:17;4058:27;;4026:61;4133:2;4125:6;4122:14;4102:18;4099:38;4096:161;;;4179:10;4174:3;4170:20;4167:1;4160:31;4214:4;4211:1;4204:15;4242:4;4239:1;4232:15;4096:161;;3883:380;;;:::o", "language": "Solidity", "natspec": {"kind": "dev", "methods": {"owner()": {"details": "Returns the address of the current owner."}, "renounceOwnership()": {"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."}, "transferOwnership(address)": {"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}}, "version": 1}, "offset": [110, 1502], "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x7D JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0x5B JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xD3 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xDB JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0xF6 JUMPI DUP1 PUSH4 0xF7C89A4B EQ PUSH2 0x109 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x654AA91 EQ PUSH2 0x82 JUMPI DUP1 PUSH4 0x2336B932 EQ PUSH2 0x97 JUMPI DUP1 PUSH4 0x5CE54FDB EQ PUSH2 0xC0 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x95 PUSH2 0x90 CALLDATASIZE PUSH1 0x4 PUSH2 0x6A3 JUMP JUMPDEST PUSH2 0x11C JUMP JUMPDEST STOP JUMPDEST PUSH2 0xAA PUSH2 0xA5 CALLDATASIZE PUSH1 0x4 PUSH2 0x707 JUMP JUMPDEST PUSH2 0x1CB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB7 SWAP2 SWAP1 PUSH2 0x774 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xAA PUSH2 0xCE CALLDATASIZE PUSH1 0x4 PUSH2 0x707 JUMP JUMPDEST PUSH2 0x2FE JUMP JUMPDEST PUSH2 0x95 PUSH2 0x3AE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xB7 JUMP JUMPDEST PUSH2 0x95 PUSH2 0x104 CALLDATASIZE PUSH1 0x4 PUSH2 0x7A7 JUMP JUMPDEST PUSH2 0x3E4 JUMP JUMPDEST PUSH2 0x95 PUSH2 0x117 CALLDATASIZE PUSH1 0x4 PUSH2 0x6A3 JUMP JUMPDEST PUSH2 0x47F JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x14F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x146 SWAP1 PUSH2 0x7D7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP3 PUSH1 0x40 MLOAD PUSH2 0x15F SWAP2 SWAP1 PUSH2 0x80C JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH1 0xFF AND PUSH2 0x191 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x146 SWAP1 PUSH2 0x828 JUMP JUMPDEST DUP1 PUSH1 0x1 DUP4 PUSH1 0x40 MLOAD PUSH2 0x1A2 SWAP2 SWAP1 PUSH2 0x80C JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH1 0x1 ADD SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0x1C6 SWAP3 SWAP2 SWAP1 PUSH2 0x567 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP3 PUSH1 0x40 MLOAD PUSH2 0x1DD SWAP2 SWAP1 PUSH2 0x80C JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH1 0xFF AND PUSH2 0x20F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x146 SWAP1 PUSH2 0x828 JUMP JUMPDEST DUP2 PUSH1 0x40 MLOAD PUSH2 0x21D SWAP2 SWAP1 PUSH2 0x80C JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB DUP2 KECCAK256 SWAP1 CALLER SWAP1 PUSH32 0xB8EF4C067762D50F1EA064DDB955A43E3EA90EF38028E9705D871E03460DEEB SWAP1 PUSH1 0x0 SWAP1 LOG3 PUSH1 0x1 DUP3 PUSH1 0x40 MLOAD PUSH2 0x25F SWAP2 SWAP1 PUSH2 0x80C JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 KECCAK256 DUP1 SLOAD PUSH2 0x279 SWAP1 PUSH2 0x853 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2A5 SWAP1 PUSH2 0x853 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2F2 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2C7 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2F2 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2D5 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP3 PUSH1 0x40 MLOAD PUSH2 0x310 SWAP2 SWAP1 PUSH2 0x80C JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH1 0xFF AND PUSH2 0x342 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x146 SWAP1 PUSH2 0x828 JUMP JUMPDEST DUP2 PUSH1 0x40 MLOAD PUSH2 0x350 SWAP2 SWAP1 PUSH2 0x80C JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB DUP2 KECCAK256 SWAP1 CALLER SWAP1 PUSH32 0x5159C5254A9DC3A6D84C7424B5E5032BA56A962DFEE368EB1F8BFF7D119E69B8 SWAP1 PUSH1 0x0 SWAP1 LOG3 PUSH1 0x1 DUP3 PUSH1 0x40 MLOAD PUSH2 0x392 SWAP2 SWAP1 PUSH2 0x80C JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH1 0x1 ADD DUP1 SLOAD PUSH2 0x279 SWAP1 PUSH2 0x853 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x3D8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x146 SWAP1 PUSH2 0x7D7 JUMP JUMPDEST PUSH2 0x3E2 PUSH1 0x0 PUSH2 0x517 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x40E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x146 SWAP1 PUSH2 0x7D7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x473 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x146 JUMP JUMPDEST PUSH2 0x47C DUP2 PUSH2 0x517 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x4A9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x146 SWAP1 PUSH2 0x7D7 JUMP JUMPDEST DUP1 PUSH1 0x1 DUP4 PUSH1 0x40 MLOAD PUSH2 0x4BA SWAP2 SWAP1 PUSH2 0x80C JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH1 0x0 ADD SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0x4DE SWAP3 SWAP2 SWAP1 PUSH2 0x567 JUMP JUMPDEST POP PUSH1 0x1 DUP1 DUP4 PUSH1 0x40 MLOAD PUSH2 0x4F0 SWAP2 SWAP1 PUSH2 0x80C JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 KECCAK256 PUSH1 0x2 ADD DUP1 SLOAD SWAP2 ISZERO ISZERO PUSH1 0xFF NOT SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH2 0x573 SWAP1 PUSH2 0x853 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH2 0x595 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH2 0x5DB JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH2 0x5AE JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0x5DB JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0x5DB JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x5DB JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x5C0 JUMP JUMPDEST POP PUSH2 0x5E7 SWAP3 SWAP2 POP PUSH2 0x5EB JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x5E7 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x5EC JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x627 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x642 JUMPI PUSH2 0x642 PUSH2 0x600 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x66A JUMPI PUSH2 0x66A PUSH2 0x600 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE DUP7 PUSH1 0x20 DUP6 DUP9 ADD ADD GT ISZERO PUSH2 0x683 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 PUSH1 0x20 DUP8 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP6 DUP4 ADD ADD MSTORE DUP1 SWAP5 POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x6B6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x6CE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x6DA DUP7 DUP4 DUP8 ADD PUSH2 0x616 JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x6F0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x6FD DUP6 DUP3 DUP7 ADD PUSH2 0x616 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x719 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x730 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x73C DUP5 DUP3 DUP6 ADD PUSH2 0x616 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x75F JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x747 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x76E JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x793 DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x744 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x7B9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x7D0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x81E DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x744 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x11 SWAP1 DUP3 ADD MSTORE PUSH17 0x4E6F2050617469656E7420466F756E6421 PUSH1 0x78 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x867 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x888 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC3 PUSH3 0xCB9829 PUSH3 0xBB45A1 SWAP4 CALLCODE 0xD7 0x21 PUSH22 0xAF56E1842083F7CC86954AFF2E5ED7A2562964736F6C PUSH4 0x4300080B STOP CALLER ", "pcMap": {"0": {"offset": [110, 1502], "op": "PUSH1", "path": "2", "value": "0x80"}, "2": {"fn": null, "offset": [110, 1502], "op": "PUSH1", "path": "2", "value": "0x40"}, "4": {"fn": null, "offset": [110, 1502], "op": "MSTORE", "path": "2"}, "5": {"fn": null, "offset": [110, 1502], "op": "CALLVALUE", "path": "2"}, "6": {"fn": null, "offset": [110, 1502], "op": "DUP1", "path": "2"}, "7": {"fn": null, "offset": [110, 1502], "op": "ISZERO", "path": "2"}, "8": {"fn": null, "offset": [110, 1502], "op": "PUSH2", "path": "2", "value": "0x10"}, "11": {"fn": null, "offset": [110, 1502], "op": "JUMPI", "path": "2"}, "12": {"fn": null, "offset": [110, 1502], "op": "PUSH1", "path": "2", "value": "0x0"}, "14": {"fn": null, "offset": [110, 1502], "op": "DUP1", "path": "2"}, "15": {"dev": "Cannot send ether to nonpayable function", "fn": null, "offset": [110, 1502], "op": "REVERT", "path": "2"}, "16": {"fn": null, "offset": [110, 1502], "op": "JUMPDEST", "path": "2"}, "17": {"fn": null, "offset": [110, 1502], "op": "POP", "path": "2"}, "18": {"fn": null, "offset": [110, 1502], "op": "PUSH1", "path": "2", "value": "0x4"}, "20": {"fn": null, "offset": [110, 1502], "op": "CALLDATASIZE", "path": "2"}, "21": {"fn": null, "offset": [110, 1502], "op": "LT", "path": "2"}, "22": {"fn": null, "offset": [110, 1502], "op": "PUSH2", "path": "2", "value": "0x7D"}, "25": {"fn": null, "offset": [110, 1502], "op": "JUMPI", "path": "2"}, "26": {"fn": null, "offset": [110, 1502], "op": "PUSH1", "path": "2", "value": "0x0"}, "28": {"fn": null, "offset": [110, 1502], "op": "CALLDATALOAD", "path": "2"}, "29": {"fn": null, "offset": [110, 1502], "op": "PUSH1", "path": "2", "value": "0xE0"}, "31": {"fn": null, "offset": [110, 1502], "op": "SHR", "path": "2"}, "32": {"fn": null, "offset": [110, 1502], "op": "DUP1", "path": "2"}, "33": {"fn": null, "offset": [110, 1502], "op": "PUSH4", "path": "2", "value": "0x715018A6"}, "38": {"fn": null, "offset": [110, 1502], "op": "GT", "path": "2"}, "39": {"fn": null, "offset": [110, 1502], "op": "PUSH2", "path": "2", "value": "0x5B"}, "42": {"fn": null, "offset": [110, 1502], "op": "JUMPI", "path": "2"}, "43": {"fn": null, "offset": [110, 1502], "op": "DUP1", "path": "2"}, "44": {"fn": null, "offset": [110, 1502], "op": "PUSH4", "path": "2", "value": "0x715018A6"}, "49": {"fn": null, "offset": [110, 1502], "op": "EQ", "path": "2"}, "50": {"fn": null, "offset": [110, 1502], "op": "PUSH2", "path": "2", "value": "0xD3"}, "53": {"fn": null, "offset": [110, 1502], "op": "JUMPI", "path": "2"}, "54": {"fn": null, "offset": [110, 1502], "op": "DUP1", "path": "2"}, "55": {"fn": null, "offset": [110, 1502], "op": "PUSH4", "path": "2", "value": "0x8DA5CB5B"}, "60": {"fn": null, "offset": [110, 1502], "op": "EQ", "path": "2"}, "61": {"fn": null, "offset": [110, 1502], "op": "PUSH2", "path": "2", "value": "0xDB"}, "64": {"fn": null, "offset": [110, 1502], "op": "JUMPI", "path": "2"}, "65": {"fn": null, "offset": [110, 1502], "op": "DUP1", "path": "2"}, "66": {"fn": null, "offset": [110, 1502], "op": "PUSH4", "path": "2", "value": "0xF2FDE38B"}, "71": {"fn": null, "offset": [110, 1502], "op": "EQ", "path": "2"}, "72": {"fn": null, "offset": [110, 1502], "op": "PUSH2", "path": "2", "value": "0xF6"}, "75": {"fn": null, "offset": [110, 1502], "op": "JUMPI", "path": "2"}, "76": {"fn": null, "offset": [110, 1502], "op": "DUP1", "path": "2"}, "77": {"fn": null, "offset": [110, 1502], "op": "PUSH4", "path": "2", "value": "0xF7C89A4B"}, "82": {"fn": null, "offset": [110, 1502], "op": "EQ", "path": "2"}, "83": {"fn": null, "offset": [110, 1502], "op": "PUSH2", "path": "2", "value": "0x109"}, "86": {"fn": null, "offset": [110, 1502], "op": "JUMPI", "path": "2"}, "87": {"fn": null, "offset": [110, 1502], "op": "PUSH1", "path": "2", "value": "0x0"}, "89": {"fn": null, "offset": [110, 1502], "op": "DUP1", "path": "2"}, "90": {"fn": null, "offset": [110, 1502], "op": "REVERT", "path": "2"}, "91": {"fn": null, "offset": [110, 1502], "op": "JUMPDEST", "path": "2"}, "92": {"fn": null, "offset": [110, 1502], "op": "DUP1", "path": "2"}, "93": {"fn": null, "offset": [110, 1502], "op": "PUSH4", "path": "2", "value": "0x654AA91"}, "98": {"fn": null, "offset": [110, 1502], "op": "EQ", "path": "2"}, "99": {"fn": null, "offset": [110, 1502], "op": "PUSH2", "path": "2", "value": "0x82"}, "102": {"fn": null, "offset": [110, 1502], "op": "JUMPI", "path": "2"}, "103": {"fn": null, "offset": [110, 1502], "op": "DUP1", "path": "2"}, "104": {"fn": null, "offset": [110, 1502], "op": "PUSH4", "path": "2", "value": "0x2336B932"}, "109": {"fn": null, "offset": [110, 1502], "op": "EQ", "path": "2"}, "110": {"fn": null, "offset": [110, 1502], "op": "PUSH2", "path": "2", "value": "0x97"}, "113": {"fn": null, "offset": [110, 1502], "op": "JUMPI", "path": "2"}, "114": {"fn": null, "offset": [110, 1502], "op": "DUP1", "path": "2"}, "115": {"fn": null, "offset": [110, 1502], "op": "PUSH4", "path": "2", "value": "0x5CE54FDB"}, "120": {"fn": null, "offset": [110, 1502], "op": "EQ", "path": "2"}, "121": {"fn": null, "offset": [110, 1502], "op": "PUSH2", "path": "2", "value": "0xC0"}, "124": {"fn": null, "offset": [110, 1502], "op": "JUMPI", "path": "2"}, "125": {"fn": null, "offset": [110, 1502], "op": "JUMPDEST", "path": "2"}, "126": {"fn": null, "offset": [110, 1502], "op": "PUSH1", "path": "2", "value": "0x0"}, "128": {"fn": null, "offset": [110, 1502], "op": "DUP1", "path": "2"}, "129": {"first_revert": true, "fn": null, "offset": [110, 1502], "op": "REVERT", "path": "2"}, "130": {"fn": "EMR.addUserHash", "offset": [1245, 1500], "op": "JUMPDEST", "path": "2"}, "131": {"fn": "EMR.addUserHash", "offset": [1245, 1500], "op": "PUSH2", "path": "2", "value": "0x95"}, "134": {"fn": "EMR.addUserHash", "offset": [1245, 1500], "op": "PUSH2", "path": "2", "value": "0x90"}, "137": {"fn": "EMR.addUserHash", "offset": [1245, 1500], "op": "CALLDATASIZE", "path": "2"}, "138": {"fn": "EMR.addUserHash", "offset": [1245, 1500], "op": "PUSH1", "path": "2", "value": "0x4"}, "140": {"fn": "EMR.addUserHash", "offset": [1245, 1500], "op": "PUSH2", "path": "2", "value": "0x6A3"}, "143": {"fn": "EMR.addUserHash", "jump": "i", "offset": [1245, 1500], "op": "JUMP", "path": "2"}, "144": {"fn": "EMR.addUserHash", "offset": [1245, 1500], "op": "JUMPDEST", "path": "2"}, "145": {"fn": "EMR.addUserHash", "offset": [1245, 1500], "op": "PUSH2", "path": "2", "value": "0x11C"}, "148": {"fn": "EMR.addUserHash", "jump": "i", "offset": [1245, 1500], "op": "JUMP", "path": "2"}, "149": {"fn": "EMR.addUserHash", "offset": [1245, 1500], "op": "JUMPDEST", "path": "2"}, "150": {"fn": "EMR.addUserHash", "offset": [1245, 1500], "op": "STOP", "path": "2"}, "151": {"fn": "EMR.getUserKey", "offset": [480, 748], "op": "JUMPDEST", "path": "2"}, "152": {"fn": "EMR.getUserKey", "offset": [480, 748], "op": "PUSH2", "path": "2", "value": "0xAA"}, "155": {"fn": "EMR.getUserKey", "offset": [480, 748], "op": "PUSH2", "path": "2", "value": "0xA5"}, "158": {"fn": "EMR.getUserKey", "offset": [480, 748], "op": "CALLDATASIZE", "path": "2"}, "159": {"fn": "EMR.getUserKey", "offset": [480, 748], "op": "PUSH1", "path": "2", "value": "0x4"}, "161": {"fn": "EMR.getUserKey", "offset": [480, 748], "op": "PUSH2", "path": "2", "value": "0x707"}, "164": {"fn": "EMR.getUserKey", "jump": "i", "offset": [480, 748], "op": "JUMP", "path": "2"}, "165": {"fn": "EMR.getUserKey", "offset": [480, 748], "op": "JUMPDEST", "path": "2"}, "166": {"fn": "EMR.getUserKey", "offset": [480, 748], "op": "PUSH2", "path": "2", "value": "0x1CB"}, "169": {"fn": "EMR.getUserKey", "jump": "i", "offset": [480, 748], "op": "JUMP", "path": "2"}, "170": {"fn": "EMR.getUserKey", "offset": [480, 748], "op": "JUMPDEST", "path": "2"}, "171": {"fn": "EMR.getUserKey", "offset": [480, 748], "op": "PUSH1", "path": "2", "value": "0x40"}, "173": {"fn": "EMR.getUserKey", "offset": [480, 748], "op": "MLOAD", "path": "2"}, "174": {"fn": "EMR.getUserKey", "offset": [480, 748], "op": "PUSH2", "path": "2", "value": "0xB7"}, "177": {"fn": "EMR.getUserKey", "offset": [480, 748], "op": "SWAP2", "path": "2"}, "178": {"fn": "EMR.getUserKey", "offset": [480, 748], "op": "SWAP1", "path": "2"}, "179": {"fn": "EMR.getUserKey", "offset": [480, 748], "op": "PUSH2", "path": "2", "value": "0x774"}, "182": {"fn": "EMR.getUserKey", "jump": "i", "offset": [480, 748], "op": "JUMP", "path": "2"}, "183": {"fn": "EMR.getUserKey", "offset": [480, 748], "op": "JUMPDEST", "path": "2"}, "184": {"fn": "EMR.getUserKey", "offset": [480, 748], "op": "PUSH1", "path": "2", "value": "0x40"}, "186": {"fn": "EMR.getUserKey", "offset": [480, 748], "op": "MLOAD", "path": "2"}, "187": {"fn": "EMR.getUserKey", "offset": [480, 748], "op": "DUP1", "path": "2"}, "188": {"fn": "EMR.getUserKey", "offset": [480, 748], "op": "SWAP2", "path": "2"}, "189": {"fn": "EMR.getUserKey", "offset": [480, 748], "op": "SUB", "path": "2"}, "190": {"fn": "EMR.getUserKey", "offset": [480, 748], "op": "SWAP1", "path": "2"}, "191": {"fn": "EMR.getUserKey", "offset": [480, 748], "op": "RETURN", "path": "2"}, "192": {"fn": "EMR.getUserHashData", "offset": [754, 1023], "op": "JUMPDEST", "path": "2"}, "193": {"fn": "EMR.getUserHashData", "offset": [754, 1023], "op": "PUSH2", "path": "2", "value": "0xAA"}, "196": {"fn": "EMR.getUserHashData", "offset": [754, 1023], "op": "PUSH2", "path": "2", "value": "0xCE"}, "199": {"fn": "EMR.getUserHashData", "offset": [754, 1023], "op": "CALLDATASIZE", "path": "2"}, "200": {"fn": "EMR.getUserHashData", "offset": [754, 1023], "op": "PUSH1", "path": "2", "value": "0x4"}, "202": {"fn": "EMR.getUserHashData", "offset": [754, 1023], "op": "PUSH2", "path": "2", "value": "0x707"}, "205": {"fn": "EMR.getUserHashData", "jump": "i", "offset": [754, 1023], "op": "JUMP", "path": "2"}, "206": {"fn": "EMR.getUserHashData", "offset": [754, 1023], "op": "JUMPDEST", "path": "2"}, "207": {"fn": "EMR.getUserHashData", "offset": [754, 1023], "op": "PUSH2", "path": "2", "value": "0x2FE"}, "210": {"fn": "EMR.getUserHashData", "jump": "i", "offset": [754, 1023], "op": "JUMP", "path": "2"}, "211": {"fn": "Ownable.renounceOwnership", "offset": [1668, 1769], "op": "JUMPDEST", "path": "0"}, "212": {"fn": "Ownable.renounceOwnership", "offset": [1668, 1769], "op": "PUSH2", "path": "0", "value": "0x95"}, "215": {"fn": "Ownable.renounceOwnership", "offset": [1668, 1769], "op": "PUSH2", "path": "0", "value": "0x3AE"}, "218": {"fn": "Ownable.renounceOwnership", "jump": "i", "offset": [1668, 1769], "op": "JUMP", "path": "0"}, "219": {"fn": "Ownable.owner", "offset": [1036, 1121], "op": "JUMPDEST", "path": "0"}, "220": {"fn": "Ownable.owner", "offset": [1082, 1089], "op": "PUSH1", "path": "0", "value": "0x0"}, "222": {"fn": "Ownable.owner", "offset": [1108, 1114], "op": "SLOAD", "path": "0", "statement": 0}, "223": {"fn": "Ownable.owner", "offset": [1036, 1121], "op": "PUSH1", "path": "0", "value": "0x40"}, "225": {"fn": "Ownable.owner", "offset": [1036, 1121], "op": "MLOAD", "path": "0"}, "226": {"op": "PUSH1", "value": "0x1"}, "228": {"op": "PUSH1", "value": "0x1"}, "230": {"op": "PUSH1", "value": "0xA0"}, "232": {"op": "SHL"}, "233": {"op": "SUB"}, "234": {"fn": "Ownable.owner", "offset": [1108, 1114], "op": "SWAP1", "path": "0"}, "235": {"fn": "Ownable.owner", "offset": [1108, 1114], "op": "SWAP2", "path": "0"}, "236": {"fn": "Ownable.owner", "offset": [1108, 1114], "op": "AND", "path": "0"}, "237": {"op": "DUP2"}, "238": {"op": "MSTORE"}, "239": {"op": "PUSH1", "value": "0x20"}, "241": {"op": "ADD"}, "242": {"fn": "Ownable.owner", "offset": [1036, 1121], "op": "PUSH2", "path": "0", "value": "0xB7"}, "245": {"op": "JUMP"}, "246": {"fn": "Ownable.transferOwnership", "offset": [1918, 2116], "op": "JUMPDEST", "path": "0"}, "247": {"fn": "Ownable.transferOwnership", "offset": [1918, 2116], "op": "PUSH2", "path": "0", "value": "0x95"}, "250": {"fn": "Ownable.transferOwnership", "offset": [1918, 2116], "op": "PUSH2", "path": "0", "value": "0x104"}, "253": {"fn": "Ownable.transferOwnership", "offset": [1918, 2116], "op": "CALLDATASIZE", "path": "0"}, "254": {"fn": "Ownable.transferOwnership", "offset": [1918, 2116], "op": "PUSH1", "path": "0", "value": "0x4"}, "256": {"fn": "Ownable.transferOwnership", "offset": [1918, 2116], "op": "PUSH2", "path": "0", "value": "0x7A7"}, "259": {"fn": "Ownable.transferOwnership", "jump": "i", "offset": [1918, 2116], "op": "JUMP", "path": "0"}, "260": {"fn": "Ownable.transferOwnership", "offset": [1918, 2116], "op": "JUMPDEST", "path": "0"}, "261": {"fn": "Ownable.transferOwnership", "offset": [1918, 2116], "op": "PUSH2", "path": "0", "value": "0x3E4"}, "264": {"fn": "Ownable.transferOwnership", "jump": "i", "offset": [1918, 2116], "op": "JUMP", "path": "0"}, "265": {"fn": "EMR.addUserKey", "offset": [1029, 1239], "op": "JUMPDEST", "path": "2"}, "266": {"fn": "EMR.addUserKey", "offset": [1029, 1239], "op": "PUSH2", "path": "2", "value": "0x95"}, "269": {"fn": "EMR.addUserKey", "offset": [1029, 1239], "op": "PUSH2", "path": "2", "value": "0x117"}, "272": {"fn": "EMR.addUserKey", "offset": [1029, 1239], "op": "CALLDATASIZE", "path": "2"}, "273": {"fn": "EMR.addUserKey", "offset": [1029, 1239], "op": "PUSH1", "path": "2", "value": "0x4"}, "275": {"fn": "EMR.addUserKey", "offset": [1029, 1239], "op": "PUSH2", "path": "2", "value": "0x6A3"}, "278": {"fn": "EMR.addUserKey", "jump": "i", "offset": [1029, 1239], "op": "JUMP", "path": "2"}, "279": {"fn": "EMR.addUserKey", "offset": [1029, 1239], "op": "JUMPDEST", "path": "2"}, "280": {"fn": "EMR.addUserKey", "offset": [1029, 1239], "op": "PUSH2", "path": "2", "value": "0x47F"}, "283": {"fn": "EMR.addUserKey", "jump": "i", "offset": [1029, 1239], "op": "JUMP", "path": "2"}, "284": {"fn": "EMR.addUserHash", "offset": [1245, 1500], "op": "JUMPDEST", "path": "2"}, "285": {"fn": "Ownable.owner", "offset": [1082, 1089], "op": "PUSH1", "path": "0", "value": "0x0"}, "287": {"fn": "Ownable.owner", "offset": [1108, 1114], "op": "SLOAD", "path": "0"}, "288": {"op": "PUSH1", "value": "0x1"}, "290": {"op": "PUSH1", "value": "0x1"}, "292": {"op": "PUSH1", "value": "0xA0"}, "294": {"op": "SHL"}, "295": {"op": "SUB"}, "296": {"fn": "Ownable.owner", "offset": [1108, 1114], "op": "AND", "path": "0"}, "297": {"fn": "Context._msgSender", "offset": [719, 729], "op": "CALLER", "path": "1", "statement": 1}, "298": {"offset": [1248, 1271], "op": "EQ", "path": "0"}, "299": {"offset": [1240, 1308], "op": "PUSH2", "path": "0", "value": "0x14F"}, "302": {"offset": [1240, 1308], "op": "JUMPI", "path": "0"}, "303": {"fn": "Context._msgSender", "offset": [1240, 1308], "op": "PUSH1", "path": "0", "value": "0x40"}, "305": {"fn": "Context._msgSender", "offset": [1240, 1308], "op": "MLOAD", "path": "0"}, "306": {"op": "PUSH3", "value": "0x461BCD"}, "310": {"op": "PUSH1", "value": "0xE5"}, "312": {"op": "SHL"}, "313": {"offset": [1240, 1308], "op": "DUP2", "path": "0"}, "314": {"fn": "Context._msgSender", "offset": [1240, 1308], "op": "MSTORE", "path": "0"}, "315": {"fn": "Context._msgSender", "offset": [1240, 1308], "op": "PUSH1", "path": "0", "value": "0x4"}, "317": {"fn": "Context._msgSender", "offset": [1240, 1308], "op": "ADD", "path": "0"}, "318": {"fn": "Context._msgSender", "offset": [1240, 1308], "op": "PUSH2", "path": "0", "value": "0x146"}, "321": {"fn": "Context._msgSender", "offset": [1240, 1308], "op": "SWAP1", "path": "0"}, "322": {"fn": "Context._msgSender", "offset": [1240, 1308], "op": "PUSH2", "path": "0", "value": "0x7D7"}, "325": {"fn": "Context._msgSender", "jump": "i", "offset": [1240, 1308], "op": "JUMP", "path": "0"}, "326": {"fn": "Context._msgSender", "offset": [1240, 1308], "op": "JUMPDEST", "path": "0"}, "327": {"fn": "Context._msgSender", "offset": [1240, 1308], "op": "PUSH1", "path": "0", "value": "0x40"}, "329": {"fn": "Context._msgSender", "offset": [1240, 1308], "op": "MLOAD", "path": "0"}, "330": {"fn": "Context._msgSender", "offset": [1240, 1308], "op": "DUP1", "path": "0"}, "331": {"fn": "Context._msgSender", "offset": [1240, 1308], "op": "SWAP2", "path": "0"}, "332": {"fn": "Context._msgSender", "offset": [1240, 1308], "op": "SUB", "path": "0"}, "333": {"fn": "Context._msgSender", "offset": [1240, 1308], "op": "SWAP1", "path": "0"}, "334": {"fn": "Context._msgSender", "offset": [1240, 1308], "op": "REVERT", "optimizer_revert": true, "path": "0"}, "335": {"fn": "Context._msgSender", "offset": [1240, 1308], "op": "JUMPDEST", "path": "0"}, "336": {"fn": "EMR.addUserHash", "offset": [1397, 1404], "op": "PUSH1", "path": "2", "statement": 2, "value": "0x1"}, "338": {"fn": "EMR.addUserHash", "offset": [1405, 1413], "op": "DUP3", "path": "2"}, "339": {"fn": "EMR.addUserHash", "offset": [1397, 1414], "op": "PUSH1", "path": "2", "value": "0x40"}, "341": {"fn": "EMR.addUserHash", "offset": [1397, 1414], "op": "MLOAD", "path": "2"}, "342": {"fn": "EMR.addUserHash", "offset": [1397, 1414], "op": "PUSH2", "path": "2", "value": "0x15F"}, "345": {"fn": "EMR.addUserHash", "offset": [1397, 1414], "op": "SWAP2", "path": "2"}, "346": {"fn": "EMR.addUserHash", "offset": [1397, 1414], "op": "SWAP1", "path": "2"}, "347": {"fn": "EMR.addUserHash", "offset": [1397, 1414], "op": "PUSH2", "path": "2", "value": "0x80C"}, "350": {"fn": "EMR.addUserHash", "jump": "i", "offset": [1397, 1414], "op": "JUMP", "path": "2"}, "351": {"fn": "EMR.addUserHash", "offset": [1397, 1414], "op": "JUMPDEST", "path": "2"}, "352": {"fn": "EMR.addUserHash", "offset": [1397, 1414], "op": "SWAP1", "path": "2"}, "353": {"fn": "EMR.addUserHash", "offset": [1397, 1414], "op": "DUP2", "path": "2"}, "354": {"fn": "EMR.addUserHash", "offset": [1397, 1414], "op": "MSTORE", "path": "2"}, "355": {"fn": "EMR.addUserHash", "offset": [1397, 1414], "op": "PUSH1", "path": "2", "value": "0x40"}, "357": {"fn": "EMR.addUserHash", "offset": [1397, 1414], "op": "MLOAD", "path": "2"}, "358": {"fn": "EMR.addUserHash", "offset": [1397, 1414], "op": "SWAP1", "path": "2"}, "359": {"fn": "EMR.addUserHash", "offset": [1397, 1414], "op": "DUP2", "path": "2"}, "360": {"fn": "EMR.addUserHash", "offset": [1397, 1414], "op": "SWAP1", "path": "2"}, "361": {"fn": "EMR.addUserHash", "offset": [1397, 1414], "op": "SUB", "path": "2"}, "362": {"fn": "EMR.addUserHash", "offset": [1397, 1414], "op": "PUSH1", "path": "2", "value": "0x20"}, "364": {"fn": "EMR.addUserHash", "offset": [1397, 1414], "op": "ADD", "path": "2"}, "365": {"fn": "EMR.addUserHash", "offset": [1397, 1414], "op": "SWAP1", "path": "2"}, "366": {"fn": "EMR.addUserHash", "offset": [1397, 1414], "op": "KECCAK256", "path": "2"}, "367": {"fn": "EMR.addUserHash", "offset": [1397, 1423], "op": "PUSH1", "path": "2", "value": "0x2"}, "369": {"fn": "EMR.addUserHash", "offset": [1397, 1423], "op": "ADD", "path": "2"}, "370": {"fn": "EMR.addUserHash", "offset": [1397, 1423], "op": "SLOAD", "path": "2"}, "371": {"fn": "EMR.addUserHash", "offset": [1397, 1423], "op": "PUSH1", "path": "2", "value": "0xFF"}, "373": {"branch": 17, "fn": "EMR.addUserHash", "offset": [1397, 1423], "op": "AND", "path": "2"}, "374": {"fn": "EMR.addUserHash", "offset": [1389, 1445], "op": "PUSH2", "path": "2", "value": "0x191"}, "377": {"branch": 17, "fn": "EMR.addUserHash", "offset": [1389, 1445], "op": "JUMPI", "path": "2"}, "378": {"fn": "EMR.addUserHash", "offset": [1389, 1445], "op": "PUSH1", "path": "2", "value": "0x40"}, "380": {"fn": "EMR.addUserHash", "offset": [1389, 1445], "op": "MLOAD", "path": "2"}, "381": {"op": "PUSH3", "value": "0x461BCD"}, "385": {"op": "PUSH1", "value": "0xE5"}, "387": {"op": "SHL"}, "388": {"fn": "EMR.addUserHash", "offset": [1389, 1445], "op": "DUP2", "path": "2"}, "389": {"fn": "EMR.addUserHash", "offset": [1389, 1445], "op": "MSTORE", "path": "2"}, "390": {"fn": "EMR.addUserHash", "offset": [1389, 1445], "op": "PUSH1", "path": "2", "value": "0x4"}, "392": {"fn": "EMR.addUserHash", "offset": [1389, 1445], "op": "ADD", "path": "2"}, "393": {"fn": "EMR.addUserHash", "offset": [1389, 1445], "op": "PUSH2", "path": "2", "value": "0x146"}, "396": {"fn": "EMR.addUserHash", "offset": [1389, 1445], "op": "SWAP1", "path": "2"}, "397": {"fn": "EMR.addUserHash", "offset": [1389, 1445], "op": "PUSH2", "path": "2", "value": "0x828"}, "400": {"fn": "EMR.addUserHash", "jump": "i", "offset": [1389, 1445], "op": "JUMP", "path": "2"}, "401": {"fn": "EMR.addUserHash", "offset": [1389, 1445], "op": "JUMPDEST", "path": "2"}, "402": {"fn": "EMR.addUserHash", "offset": [1484, 1493], "op": "DUP1", "path": "2", "statement": 3}, "403": {"fn": "EMR.addUserHash", "offset": [1455, 1462], "op": "PUSH1", "path": "2", "value": "0x1"}, "405": {"fn": "EMR.addUserHash", "offset": [1463, 1471], "op": "DUP4", "path": "2"}, "406": {"fn": "EMR.addUserHash", "offset": [1455, 1472], "op": "PUSH1", "path": "2", "value": "0x40"}, "408": {"fn": "EMR.addUserHash", "offset": [1455, 1472], "op": "MLOAD", "path": "2"}, "409": {"fn": "EMR.addUserHash", "offset": [1455, 1472], "op": "PUSH2", "path": "2", "value": "0x1A2"}, "412": {"fn": "EMR.addUserHash", "offset": [1455, 1472], "op": "SWAP2", "path": "2"}, "413": {"fn": "EMR.addUserHash", "offset": [1455, 1472], "op": "SWAP1", "path": "2"}, "414": {"fn": "EMR.addUserHash", "offset": [1455, 1472], "op": "PUSH2", "path": "2", "value": "0x80C"}, "417": {"fn": "EMR.addUserHash", "jump": "i", "offset": [1455, 1472], "op": "JUMP", "path": "2"}, "418": {"fn": "EMR.addUserHash", "offset": [1455, 1472], "op": "JUMPDEST", "path": "2"}, "419": {"fn": "EMR.addUserHash", "offset": [1455, 1472], "op": "SWAP1", "path": "2"}, "420": {"fn": "EMR.addUserHash", "offset": [1455, 1472], "op": "DUP2", "path": "2"}, "421": {"fn": "EMR.addUserHash", "offset": [1455, 1472], "op": "MSTORE", "path": "2"}, "422": {"fn": "EMR.addUserHash", "offset": [1455, 1472], "op": "PUSH1", "path": "2", "value": "0x20"}, "424": {"fn": "EMR.addUserHash", "offset": [1455, 1472], "op": "ADD", "path": "2"}, "425": {"fn": "EMR.addUserHash", "offset": [1455, 1472], "op": "PUSH1", "path": "2", "value": "0x40"}, "427": {"fn": "EMR.addUserHash", "offset": [1455, 1472], "op": "MLOAD", "path": "2"}, "428": {"fn": "EMR.addUserHash", "offset": [1455, 1472], "op": "DUP1", "path": "2"}, "429": {"fn": "EMR.addUserHash", "offset": [1455, 1472], "op": "SWAP2", "path": "2"}, "430": {"fn": "EMR.addUserHash", "offset": [1455, 1472], "op": "SUB", "path": "2"}, "431": {"fn": "EMR.addUserHash", "offset": [1455, 1472], "op": "SWAP1", "path": "2"}, "432": {"fn": "EMR.addUserHash", "offset": [1455, 1472], "op": "KECCAK256", "path": "2"}, "433": {"fn": "EMR.addUserHash", "offset": [1455, 1481], "op": "PUSH1", "path": "2", "value": "0x1"}, "435": {"fn": "EMR.addUserHash", "offset": [1455, 1481], "op": "ADD", "path": "2"}, "436": {"fn": "EMR.addUserHash", "offset": [1455, 1493], "op": "SWAP1", "path": "2"}, "437": {"fn": "EMR.addUserHash", "offset": [1455, 1493], "op": "DUP1", "path": "2"}, "438": {"fn": "EMR.addUserHash", "offset": [1455, 1493], "op": "MLOAD", "path": "2"}, "439": {"fn": "EMR.addUserHash", "offset": [1455, 1493], "op": "SWAP1", "path": "2"}, "440": {"fn": "EMR.addUserHash", "offset": [1455, 1493], "op": "PUSH1", "path": "2", "value": "0x20"}, "442": {"fn": "EMR.addUserHash", "offset": [1455, 1493], "op": "ADD", "path": "2"}, "443": {"fn": "EMR.addUserHash", "offset": [1455, 1493], "op": "SWAP1", "path": "2"}, "444": {"fn": "EMR.addUserHash", "offset": [1455, 1493], "op": "PUSH2", "path": "2", "value": "0x1C6"}, "447": {"fn": "EMR.addUserHash", "offset": [1455, 1493], "op": "SWAP3", "path": "2"}, "448": {"fn": "EMR.addUserHash", "offset": [1455, 1493], "op": "SWAP2", "path": "2"}, "449": {"fn": "EMR.addUserHash", "offset": [1455, 1493], "op": "SWAP1", "path": "2"}, "450": {"fn": "EMR.addUserHash", "offset": [1455, 1493], "op": "PUSH2", "path": "2", "value": "0x567"}, "453": {"fn": "EMR.addUserHash", "jump": "i", "offset": [1455, 1493], "op": "JUMP", "path": "2"}, "454": {"fn": "EMR.addUserHash", "offset": [1455, 1493], "op": "JUMPDEST", "path": "2"}, "455": {"fn": "EMR.addUserHash", "offset": [1455, 1493], "op": "POP", "path": "2"}, "456": {"fn": "EMR.addUserHash", "offset": [1245, 1500], "op": "POP", "path": "2"}, "457": {"fn": "EMR.addUserHash", "offset": [1245, 1500], "op": "POP", "path": "2"}, "458": {"fn": "EMR.addUserHash", "jump": "o", "offset": [1245, 1500], "op": "JUMP", "path": "2"}, "459": {"fn": "EMR.getUserKey", "offset": [480, 748], "op": "JUMPDEST", "path": "2"}, "460": {"fn": "EMR.getUserKey", "offset": [556, 569], "op": "PUSH1", "path": "2", "value": "0x60"}, "462": {"fn": "EMR.getUserKey", "offset": [593, 600], "op": "PUSH1", "path": "2", "statement": 4, "value": "0x1"}, "464": {"fn": "EMR.getUserKey", "offset": [601, 609], "op": "DUP3", "path": "2"}, "465": {"fn": "EMR.getUserKey", "offset": [593, 610], "op": "PUSH1", "path": "2", "value": "0x40"}, "467": {"fn": "EMR.getUserKey", "offset": [593, 610], "op": "MLOAD", "path": "2"}, "468": {"fn": "EMR.getUserKey", "offset": [593, 610], "op": "PUSH2", "path": "2", "value": "0x1DD"}, "471": {"fn": "EMR.getUserKey", "offset": [593, 610], "op": "SWAP2", "path": "2"}, "472": {"fn": "EMR.getUserKey", "offset": [593, 610], "op": "SWAP1", "path": "2"}, "473": {"fn": "EMR.getUserKey", "offset": [593, 610], "op": "PUSH2", "path": "2", "value": "0x80C"}, "476": {"fn": "EMR.getUserKey", "jump": "i", "offset": [593, 610], "op": "JUMP", "path": "2"}, "477": {"fn": "EMR.getUserKey", "offset": [593, 610], "op": "JUMPDEST", "path": "2"}, "478": {"fn": "EMR.getUserKey", "offset": [593, 610], "op": "SWAP1", "path": "2"}, "479": {"fn": "EMR.getUserKey", "offset": [593, 610], "op": "DUP2", "path": "2"}, "480": {"fn": "EMR.getUserKey", "offset": [593, 610], "op": "MSTORE", "path": "2"}, "481": {"fn": "EMR.getUserKey", "offset": [593, 610], "op": "PUSH1", "path": "2", "value": "0x40"}, "483": {"fn": "EMR.getUserKey", "offset": [593, 610], "op": "MLOAD", "path": "2"}, "484": {"fn": "EMR.getUserKey", "offset": [593, 610], "op": "SWAP1", "path": "2"}, "485": {"fn": "EMR.getUserKey", "offset": [593, 610], "op": "DUP2", "path": "2"}, "486": {"fn": "EMR.getUserKey", "offset": [593, 610], "op": "SWAP1", "path": "2"}, "487": {"fn": "EMR.getUserKey", "offset": [593, 610], "op": "SUB", "path": "2"}, "488": {"fn": "EMR.getUserKey", "offset": [593, 610], "op": "PUSH1", "path": "2", "value": "0x20"}, "490": {"fn": "EMR.getUserKey", "offset": [593, 610], "op": "ADD", "path": "2"}, "491": {"fn": "EMR.getUserKey", "offset": [593, 610], "op": "SWAP1", "path": "2"}, "492": {"fn": "EMR.getUserKey", "offset": [593, 610], "op": "KECCAK256", "path": "2"}, "493": {"fn": "EMR.getUserKey", "offset": [593, 619], "op": "PUSH1", "path": "2", "value": "0x2"}, "495": {"fn": "EMR.getUserKey", "offset": [593, 619], "op": "ADD", "path": "2"}, "496": {"fn": "EMR.getUserKey", "offset": [593, 619], "op": "SLOAD", "path": "2"}, "497": {"fn": "EMR.getUserKey", "offset": [593, 619], "op": "PUSH1", "path": "2", "value": "0xFF"}, "499": {"branch": 18, "fn": "EMR.getUserKey", "offset": [593, 619], "op": "AND", "path": "2"}, "500": {"fn": "EMR.getUserKey", "offset": [585, 641], "op": "PUSH2", "path": "2", "value": "0x20F"}, "503": {"branch": 18, "fn": "EMR.getUserKey", "offset": [585, 641], "op": "JUMPI", "path": "2"}, "504": {"fn": "EMR.getUserKey", "offset": [585, 641], "op": "PUSH1", "path": "2", "value": "0x40"}, "506": {"fn": "EMR.getUserKey", "offset": [585, 641], "op": "MLOAD", "path": "2"}, "507": {"op": "PUSH3", "value": "0x461BCD"}, "511": {"op": "PUSH1", "value": "0xE5"}, "513": {"op": "SHL"}, "514": {"fn": "EMR.getUserKey", "offset": [585, 641], "op": "DUP2", "path": "2"}, "515": {"fn": "EMR.getUserKey", "offset": [585, 641], "op": "MSTORE", "path": "2"}, "516": {"fn": "EMR.getUserKey", "offset": [585, 641], "op": "PUSH1", "path": "2", "value": "0x4"}, "518": {"fn": "EMR.getUserKey", "offset": [585, 641], "op": "ADD", "path": "2"}, "519": {"fn": "EMR.getUserKey", "offset": [585, 641], "op": "PUSH2", "path": "2", "value": "0x146"}, "522": {"fn": "EMR.getUserKey", "offset": [585, 641], "op": "SWAP1", "path": "2"}, "523": {"fn": "EMR.getUserKey", "offset": [585, 641], "op": "PUSH2", "path": "2", "value": "0x828"}, "526": {"fn": "EMR.getUserKey", "jump": "i", "offset": [585, 641], "op": "JUMP", "path": "2"}, "527": {"fn": "EMR.getUserKey", "offset": [585, 641], "op": "JUMPDEST", "path": "2"}, "528": {"fn": "EMR.getUserKey", "offset": [687, 695], "op": "DUP2", "path": "2", "statement": 5}, "529": {"fn": "EMR.getUserKey", "offset": [656, 696], "op": "PUSH1", "path": "2", "value": "0x40"}, "531": {"fn": "EMR.getUserKey", "offset": [656, 696], "op": "MLOAD", "path": "2"}, "532": {"fn": "EMR.getUserKey", "offset": [656, 696], "op": "PUSH2", "path": "2", "value": "0x21D"}, "535": {"fn": "EMR.getUserKey", "offset": [656, 696], "op": "SWAP2", "path": "2"}, "536": {"fn": "EMR.getUserKey", "offset": [656, 696], "op": "SWAP1", "path": "2"}, "537": {"fn": "EMR.getUserKey", "offset": [656, 696], "op": "PUSH2", "path": "2", "value": "0x80C"}, "540": {"fn": "EMR.getUserKey", "jump": "i", "offset": [656, 696], "op": "JUMP", "path": "2"}, "541": {"fn": "EMR.getUserKey", "offset": [656, 696], "op": "JUMPDEST", "path": "2"}, "542": {"fn": "EMR.getUserKey", "offset": [656, 696], "op": "PUSH1", "path": "2", "value": "0x40"}, "544": {"fn": "EMR.getUserKey", "offset": [656, 696], "op": "MLOAD", "path": "2"}, "545": {"fn": "EMR.getUserKey", "offset": [656, 696], "op": "SWAP1", "path": "2"}, "546": {"fn": "EMR.getUserKey", "offset": [656, 696], "op": "DUP2", "path": "2"}, "547": {"fn": "EMR.getUserKey", "offset": [656, 696], "op": "SWAP1", "path": "2"}, "548": {"fn": "EMR.getUserKey", "offset": [656, 696], "op": "SUB", "path": "2"}, "549": {"fn": "EMR.getUserKey", "offset": [656, 696], "op": "DUP2", "path": "2"}, "550": {"fn": "EMR.getUserKey", "offset": [656, 696], "op": "KECCAK256", "path": "2"}, "551": {"fn": "EMR.getUserKey", "offset": [656, 696], "op": "SWAP1", "path": "2"}, "552": {"fn": "EMR.getUserKey", "offset": [675, 685], "op": "CALLER", "path": "2"}, "553": {"fn": "EMR.getUserKey", "offset": [675, 685], "op": "SWAP1", "path": "2"}, "554": {"fn": "EMR.getUserKey", "offset": [656, 696], "op": "PUSH32", "path": "2", "value": "0xB8EF4C067762D50F1EA064DDB955A43E3EA90EF38028E9705D871E03460DEEB"}, "587": {"fn": "EMR.getUserKey", "offset": [656, 696], "op": "SWAP1", "path": "2"}, "588": {"fn": "EMR.getUserKey", "offset": [656, 696], "op": "PUSH1", "path": "2", "value": "0x0"}, "590": {"fn": "EMR.getUserKey", "offset": [656, 696], "op": "SWAP1", "path": "2"}, "591": {"fn": "EMR.getUserKey", "offset": [656, 696], "op": "LOG3", "path": "2"}, "592": {"fn": "EMR.getUserKey", "offset": [713, 720], "op": "PUSH1", "path": "2", "statement": 6, "value": "0x1"}, "594": {"fn": "EMR.getUserKey", "offset": [721, 729], "op": "DUP3", "path": "2"}, "595": {"fn": "EMR.getUserKey", "offset": [713, 730], "op": "PUSH1", "path": "2", "value": "0x40"}, "597": {"fn": "EMR.getUserKey", "offset": [713, 730], "op": "MLOAD", "path": "2"}, "598": {"fn": "EMR.getUserKey", "offset": [713, 730], "op": "PUSH2", "path": "2", "value": "0x25F"}, "601": {"fn": "EMR.getUserKey", "offset": [713, 730], "op": "SWAP2", "path": "2"}, "602": {"fn": "EMR.getUserKey", "offset": [713, 730], "op": "SWAP1", "path": "2"}, "603": {"fn": "EMR.getUserKey", "offset": [713, 730], "op": "PUSH2", "path": "2", "value": "0x80C"}, "606": {"fn": "EMR.getUserKey", "jump": "i", "offset": [713, 730], "op": "JUMP", "path": "2"}, "607": {"fn": "EMR.getUserKey", "offset": [713, 730], "op": "JUMPDEST", "path": "2"}, "608": {"fn": "EMR.getUserKey", "offset": [713, 730], "op": "SWAP1", "path": "2"}, "609": {"fn": "EMR.getUserKey", "offset": [713, 730], "op": "DUP2", "path": "2"}, "610": {"fn": "EMR.getUserKey", "offset": [713, 730], "op": "MSTORE", "path": "2"}, "611": {"fn": "EMR.getUserKey", "offset": [713, 730], "op": "PUSH1", "path": "2", "value": "0x40"}, "613": {"fn": "EMR.getUserKey", "offset": [713, 730], "op": "MLOAD", "path": "2"}, "614": {"fn": "EMR.getUserKey", "offset": [713, 730], "op": "SWAP1", "path": "2"}, "615": {"fn": "EMR.getUserKey", "offset": [713, 730], "op": "DUP2", "path": "2"}, "616": {"fn": "EMR.getUserKey", "offset": [713, 730], "op": "SWAP1", "path": "2"}, "617": {"fn": "EMR.getUserKey", "offset": [713, 730], "op": "SUB", "path": "2"}, "618": {"fn": "EMR.getUserKey", "offset": [713, 730], "op": "PUSH1", "path": "2", "value": "0x20"}, "620": {"fn": "EMR.getUserKey", "offset": [713, 730], "op": "ADD", "path": "2"}, "621": {"fn": "EMR.getUserKey", "offset": [713, 730], "op": "SWAP1", "path": "2"}, "622": {"fn": "EMR.getUserKey", "offset": [713, 730], "op": "KECCAK256", "path": "2"}, "623": {"fn": "EMR.getUserKey", "offset": [706, 741], "op": "DUP1", "path": "2"}, "624": {"fn": "EMR.getUserKey", "offset": [706, 741], "op": "SLOAD", "path": "2"}, "625": {"fn": "EMR.getUserKey", "offset": [706, 741], "op": "PUSH2", "path": "2", "value": "0x279"}, "628": {"fn": "EMR.getUserKey", "offset": [706, 741], "op": "SWAP1", "path": "2"}, "629": {"fn": "EMR.getUserKey", "offset": [706, 741], "op": "PUSH2", "path": "2", "value": "0x853"}, "632": {"fn": "EMR.getUserKey", "jump": "i", "offset": [706, 741], "op": "JUMP", "path": "2"}, "633": {"fn": "EMR.getUserKey", "offset": [706, 741], "op": "JUMPDEST", "path": "2"}, "634": {"fn": "EMR.getUserKey", "offset": [706, 741], "op": "DUP1", "path": "2"}, "635": {"fn": "EMR.getUserKey", "offset": [706, 741], "op": "PUSH1", "path": "2", "value": "0x1F"}, "637": {"fn": "EMR.getUserKey", "offset": [706, 741], "op": "ADD", "path": "2"}, "638": {"fn": "EMR.getUserKey", "offset": [706, 741], "op": "PUSH1", "path": "2", "value": "0x20"}, "640": {"fn": "EMR.getUserKey", "offset": [706, 741], "op": "DUP1", "path": "2"}, "641": {"fn": "EMR.getUserKey", "offset": [706, 741], "op": "SWAP2", "path": "2"}, "642": {"fn": "EMR.getUserKey", "offset": [706, 741], "op": "DIV", "path": "2"}, "643": {"fn": "EMR.getUserKey", "offset": [706, 741], "op": "MUL", "path": "2"}, "644": {"fn": "EMR.getUserKey", "offset": [706, 741], "op": "PUSH1", "path": "2", "value": "0x20"}, "646": {"fn": "EMR.getUserKey", "offset": [706, 741], "op": "ADD", "path": "2"}, "647": {"fn": "EMR.getUserKey", "offset": [706, 741], "op": "PUSH1", "path": "2", "value": "0x40"}, "649": {"fn": "EMR.getUserKey", "offset": [706, 741], "op": "MLOAD", "path": "2"}, "650": {"fn": "EMR.getUserKey", "offset": [706, 741], "op": "SWAP1", "path": "2"}, "651": {"fn": "EMR.getUserKey", "offset": [706, 741], "op": "DUP2", "path": "2"}, "652": {"fn": "EMR.getUserKey", "offset": [706, 741], "op": "ADD", "path": "2"}, "653": {"fn": "EMR.getUserKey", "offset": [706, 741], "op": "PUSH1", "path": "2", "value": "0x40"}, "655": {"fn": "EMR.getUserKey", "offset": [706, 741], "op": "MSTORE", "path": "2"}, "656": {"fn": "EMR.getUserKey", "offset": [706, 741], "op": "DUP1", "path": "2"}, "657": {"fn": "EMR.getUserKey", "offset": [706, 741], "op": "SWAP3", "path": "2"}, "658": {"fn": "EMR.getUserKey", "offset": [706, 741], "op": "SWAP2", "path": "2"}, "659": {"fn": "EMR.getUserKey", "offset": [706, 741], "op": "SWAP1", "path": "2"}, "660": {"fn": "EMR.getUserKey", "offset": [706, 741], "op": "DUP2", "path": "2"}, "661": {"fn": "EMR.getUserKey", "offset": [706, 741], "op": "DUP2", "path": "2"}, "662": {"fn": "EMR.getUserKey", "offset": [706, 741], "op": "MSTORE", "path": "2"}, "663": {"fn": "EMR.getUserKey", "offset": [706, 741], "op": "PUSH1", "path": "2", "value": "0x20"}, "665": {"fn": "EMR.getUserKey", "offset": [706, 741], "op": "ADD", "path": "2"}, "666": {"fn": "EMR.getUserKey", "offset": [706, 741], "op": "DUP3", "path": "2"}, "667": {"fn": "EMR.getUserKey", "offset": [706, 741], "op": "DUP1", "path": "2"}, "668": {"fn": "EMR.getUserKey", "offset": [706, 741], "op": "SLOAD", "path": "2"}, "669": {"fn": "EMR.getUserKey", "offset": [706, 741], "op": "PUSH2", "path": "2", "value": "0x2A5"}, "672": {"fn": "EMR.getUserKey", "offset": [706, 741], "op": "SWAP1", "path": "2"}, "673": {"fn": "EMR.getUserKey", "offset": [706, 741], "op": "PUSH2", "path": "2", "value": "0x853"}, "676": {"fn": "EMR.getUserKey", "jump": "i", "offset": [706, 741], "op": "JUMP", "path": "2"}, "677": {"fn": "EMR.getUserKey", "offset": [706, 741], "op": "JUMPDEST", "path": "2"}, "678": {"fn": "EMR.getUserKey", "offset": [706, 741], "op": "DUP1", "path": "2"}, "679": {"fn": "EMR.getUserKey", "offset": [706, 741], "op": "ISZERO", "path": "2"}, "680": {"fn": "EMR.getUserKey", "offset": [706, 741], "op": "PUSH2", "path": "2", "value": "0x2F2"}, "683": {"fn": "EMR.getUserKey", "offset": [706, 741], "op": "JUMPI", "path": "2"}, "684": {"fn": "EMR.getUserKey", "offset": [706, 741], "op": "DUP1", "path": "2"}, "685": {"fn": "EMR.getUserKey", "offset": [706, 741], "op": "PUSH1", "path": "2", "value": "0x1F"}, "687": {"fn": "EMR.getUserKey", "offset": [706, 741], "op": "LT", "path": "2"}, "688": {"fn": "EMR.getUserKey", "offset": [706, 741], "op": "PUSH2", "path": "2", "value": "0x2C7"}, "691": {"fn": "EMR.getUserKey", "offset": [706, 741], "op": "JUMPI", "path": "2"}, "692": {"fn": "EMR.getUserKey", "offset": [706, 741], "op": "PUSH2", "path": "2", "value": "0x100"}, "695": {"fn": "EMR.getUserKey", "offset": [706, 741], "op": "DUP1", "path": "2"}, "696": {"fn": "EMR.getUserKey", "offset": [706, 741], "op": "DUP4", "path": "2"}, "697": {"fn": "EMR.getUserKey", "offset": [706, 741], "op": "SLOAD", "path": "2"}, "698": {"fn": "EMR.getUserKey", "offset": [706, 741], "op": "DIV", "path": "2"}, "699": {"fn": "EMR.getUserKey", "offset": [706, 741], "op": "MUL", "path": "2"}, "700": {"fn": "EMR.getUserKey", "offset": [706, 741], "op": "DUP4", "path": "2"}, "701": {"fn": "EMR.getUserKey", "offset": [706, 741], "op": "MSTORE", "path": "2"}, "702": {"fn": "EMR.getUserKey", "offset": [706, 741], "op": "SWAP2", "path": "2"}, "703": {"fn": "EMR.getUserKey", "offset": [706, 741], "op": "PUSH1", "path": "2", "value": "0x20"}, "705": {"fn": "EMR.getUserKey", "offset": [706, 741], "op": "ADD", "path": "2"}, "706": {"fn": "EMR.getUserKey", "offset": [706, 741], "op": "SWAP2", "path": "2"}, "707": {"fn": "EMR.getUserKey", "offset": [706, 741], "op": "PUSH2", "path": "2", "value": "0x2F2"}, "710": {"fn": "EMR.getUserKey", "offset": [706, 741], "op": "JUMP", "path": "2"}, "711": {"fn": "EMR.getUserKey", "offset": [706, 741], "op": "JUMPDEST", "path": "2"}, "712": {"fn": "EMR.getUserKey", "offset": [706, 741], "op": "DUP3", "path": "2"}, "713": {"fn": "EMR.getUserKey", "offset": [706, 741], "op": "ADD", "path": "2"}, "714": {"fn": "EMR.getUserKey", "offset": [706, 741], "op": "SWAP2", "path": "2"}, "715": {"fn": "EMR.getUserKey", "offset": [706, 741], "op": "SWAP1", "path": "2"}, "716": {"fn": "EMR.getUserKey", "offset": [706, 741], "op": "PUSH1", "path": "2", "value": "0x0"}, "718": {"fn": "EMR.getUserKey", "offset": [706, 741], "op": "MSTORE", "path": "2"}, "719": {"fn": "EMR.getUserKey", "offset": [706, 741], "op": "PUSH1", "path": "2", "value": "0x20"}, "721": {"fn": "EMR.getUserKey", "offset": [706, 741], "op": "PUSH1", "path": "2", "value": "0x0"}, "723": {"fn": "EMR.getUserKey", "offset": [706, 741], "op": "KECCAK256", "path": "2"}, "724": {"fn": "EMR.getUserKey", "offset": [706, 741], "op": "SWAP1", "path": "2"}, "725": {"fn": "EMR.getUserKey", "offset": [706, 741], "op": "JUMPDEST", "path": "2"}, "726": {"fn": "EMR.getUserKey", "offset": [706, 741], "op": "DUP2", "path": "2"}, "727": {"fn": "EMR.getUserKey", "offset": [706, 741], "op": "SLOAD", "path": "2"}, "728": {"fn": "EMR.getUserKey", "offset": [706, 741], "op": "DUP2", "path": "2"}, "729": {"fn": "EMR.getUserKey", "offset": [706, 741], "op": "MSTORE", "path": "2"}, "730": {"fn": "EMR.getUserKey", "offset": [706, 741], "op": "SWAP1", "path": "2"}, "731": {"fn": "EMR.getUserKey", "offset": [706, 741], "op": "PUSH1", "path": "2", "value": "0x1"}, "733": {"fn": "EMR.getUserKey", "offset": [706, 741], "op": "ADD", "path": "2"}, "734": {"fn": "EMR.getUserKey", "offset": [706, 741], "op": "SWAP1", "path": "2"}, "735": {"fn": "EMR.getUserKey", "offset": [706, 741], "op": "PUSH1", "path": "2", "value": "0x20"}, "737": {"fn": "EMR.getUserKey", "offset": [706, 741], "op": "ADD", "path": "2"}, "738": {"fn": "EMR.getUserKey", "offset": [706, 741], "op": "DUP1", "path": "2"}, "739": {"fn": "EMR.getUserKey", "offset": [706, 741], "op": "DUP4", "path": "2"}, "740": {"fn": "EMR.getUserKey", "offset": [706, 741], "op": "GT", "path": "2"}, "741": {"fn": "EMR.getUserKey", "offset": [706, 741], "op": "PUSH2", "path": "2", "value": "0x2D5"}, "744": {"fn": "EMR.getUserKey", "offset": [706, 741], "op": "JUMPI", "path": "2"}, "745": {"fn": "EMR.getUserKey", "offset": [706, 741], "op": "DUP3", "path": "2"}, "746": {"fn": "EMR.getUserKey", "offset": [706, 741], "op": "SWAP1", "path": "2"}, "747": {"fn": "EMR.getUserKey", "offset": [706, 741], "op": "SUB", "path": "2"}, "748": {"fn": "EMR.getUserKey", "offset": [706, 741], "op": "PUSH1", "path": "2", "value": "0x1F"}, "750": {"fn": "EMR.getUserKey", "offset": [706, 741], "op": "AND", "path": "2"}, "751": {"fn": "EMR.getUserKey", "offset": [706, 741], "op": "DUP3", "path": "2"}, "752": {"fn": "EMR.getUserKey", "offset": [706, 741], "op": "ADD", "path": "2"}, "753": {"fn": "EMR.getUserKey", "offset": [706, 741], "op": "SWAP2", "path": "2"}, "754": {"fn": "EMR.getUserKey", "offset": [706, 741], "op": "JUMPDEST", "path": "2"}, "755": {"fn": "EMR.getUserKey", "offset": [706, 741], "op": "POP", "path": "2"}, "756": {"fn": "EMR.getUserKey", "offset": [706, 741], "op": "POP", "path": "2"}, "757": {"fn": "EMR.getUserKey", "offset": [706, 741], "op": "POP", "path": "2"}, "758": {"fn": "EMR.getUserKey", "offset": [706, 741], "op": "POP", "path": "2"}, "759": {"fn": "EMR.getUserKey", "offset": [706, 741], "op": "POP", "path": "2"}, "760": {"fn": "EMR.getUserKey", "offset": [706, 741], "op": "SWAP1", "path": "2"}, "761": {"fn": "EMR.getUserKey", "offset": [706, 741], "op": "POP", "path": "2"}, "762": {"fn": "EMR.getUserKey", "offset": [480, 748], "op": "SWAP2", "path": "2"}, "763": {"fn": "EMR.getUserKey", "offset": [480, 748], "op": "SWAP1", "path": "2"}, "764": {"fn": "EMR.getUserKey", "offset": [480, 748], "op": "POP", "path": "2"}, "765": {"fn": "EMR.getUserKey", "jump": "o", "offset": [480, 748], "op": "JUMP", "path": "2"}, "766": {"fn": "EMR.getUserHashData", "offset": [754, 1023], "op": "JUMPDEST", "path": "2"}, "767": {"fn": "EMR.getUserHashData", "offset": [835, 848], "op": "PUSH1", "path": "2", "value": "0x60"}, "769": {"fn": "EMR.getUserHashData", "offset": [872, 879], "op": "PUSH1", "path": "2", "statement": 7, "value": "0x1"}, "771": {"fn": "EMR.getUserHashData", "offset": [880, 888], "op": "DUP3", "path": "2"}, "772": {"fn": "EMR.getUserHashData", "offset": [872, 889], "op": "PUSH1", "path": "2", "value": "0x40"}, "774": {"fn": "EMR.getUserHashData", "offset": [872, 889], "op": "MLOAD", "path": "2"}, "775": {"fn": "EMR.getUserHashData", "offset": [872, 889], "op": "PUSH2", "path": "2", "value": "0x310"}, "778": {"fn": "EMR.getUserHashData", "offset": [872, 889], "op": "SWAP2", "path": "2"}, "779": {"fn": "EMR.getUserHashData", "offset": [872, 889], "op": "SWAP1", "path": "2"}, "780": {"fn": "EMR.getUserHashData", "offset": [872, 889], "op": "PUSH2", "path": "2", "value": "0x80C"}, "783": {"fn": "EMR.getUserHashData", "jump": "i", "offset": [872, 889], "op": "JUMP", "path": "2"}, "784": {"fn": "EMR.getUserHashData", "offset": [872, 889], "op": "JUMPDEST", "path": "2"}, "785": {"fn": "EMR.getUserHashData", "offset": [872, 889], "op": "SWAP1", "path": "2"}, "786": {"fn": "EMR.getUserHashData", "offset": [872, 889], "op": "DUP2", "path": "2"}, "787": {"fn": "EMR.getUserHashData", "offset": [872, 889], "op": "MSTORE", "path": "2"}, "788": {"fn": "EMR.getUserHashData", "offset": [872, 889], "op": "PUSH1", "path": "2", "value": "0x40"}, "790": {"fn": "EMR.getUserHashData", "offset": [872, 889], "op": "MLOAD", "path": "2"}, "791": {"fn": "EMR.getUserHashData", "offset": [872, 889], "op": "SWAP1", "path": "2"}, "792": {"fn": "EMR.getUserHashData", "offset": [872, 889], "op": "DUP2", "path": "2"}, "793": {"fn": "EMR.getUserHashData", "offset": [872, 889], "op": "SWAP1", "path": "2"}, "794": {"fn": "EMR.getUserHashData", "offset": [872, 889], "op": "SUB", "path": "2"}, "795": {"fn": "EMR.getUserHashData", "offset": [872, 889], "op": "PUSH1", "path": "2", "value": "0x20"}, "797": {"fn": "EMR.getUserHashData", "offset": [872, 889], "op": "ADD", "path": "2"}, "798": {"fn": "EMR.getUserHashData", "offset": [872, 889], "op": "SWAP1", "path": "2"}, "799": {"fn": "EMR.getUserHashData", "offset": [872, 889], "op": "KECCAK256", "path": "2"}, "800": {"fn": "EMR.getUserHashData", "offset": [872, 898], "op": "PUSH1", "path": "2", "value": "0x2"}, "802": {"fn": "EMR.getUserHashData", "offset": [872, 898], "op": "ADD", "path": "2"}, "803": {"fn": "EMR.getUserHashData", "offset": [872, 898], "op": "SLOAD", "path": "2"}, "804": {"fn": "EMR.getUserHashData", "offset": [872, 898], "op": "PUSH1", "path": "2", "value": "0xFF"}, "806": {"branch": 19, "fn": "EMR.getUserHashData", "offset": [872, 898], "op": "AND", "path": "2"}, "807": {"fn": "EMR.getUserHashData", "offset": [864, 920], "op": "PUSH2", "path": "2", "value": "0x342"}, "810": {"branch": 19, "fn": "EMR.getUserHashData", "offset": [864, 920], "op": "JUMPI", "path": "2"}, "811": {"fn": "EMR.getUserHashData", "offset": [864, 920], "op": "PUSH1", "path": "2", "value": "0x40"}, "813": {"fn": "EMR.getUserHashData", "offset": [864, 920], "op": "MLOAD", "path": "2"}, "814": {"op": "PUSH3", "value": "0x461BCD"}, "818": {"op": "PUSH1", "value": "0xE5"}, "820": {"op": "SHL"}, "821": {"fn": "EMR.getUserHashData", "offset": [864, 920], "op": "DUP2", "path": "2"}, "822": {"fn": "EMR.getUserHashData", "offset": [864, 920], "op": "MSTORE", "path": "2"}, "823": {"fn": "EMR.getUserHashData", "offset": [864, 920], "op": "PUSH1", "path": "2", "value": "0x4"}, "825": {"fn": "EMR.getUserHashData", "offset": [864, 920], "op": "ADD", "path": "2"}, "826": {"fn": "EMR.getUserHashData", "offset": [864, 920], "op": "PUSH2", "path": "2", "value": "0x146"}, "829": {"fn": "EMR.getUserHashData", "offset": [864, 920], "op": "SWAP1", "path": "2"}, "830": {"fn": "EMR.getUserHashData", "offset": [864, 920], "op": "PUSH2", "path": "2", "value": "0x828"}, "833": {"fn": "EMR.getUserHashData", "jump": "i", "offset": [864, 920], "op": "JUMP", "path": "2"}, "834": {"fn": "EMR.getUserHashData", "offset": [864, 920], "op": "JUMPDEST", "path": "2"}, "835": {"fn": "EMR.getUserHashData", "offset": [964, 972], "op": "DUP2", "path": "2", "statement": 8}, "836": {"fn": "EMR.getUserHashData", "offset": [935, 973], "op": "PUSH1", "path": "2", "value": "0x40"}, "838": {"fn": "EMR.getUserHashData", "offset": [935, 973], "op": "MLOAD", "path": "2"}, "839": {"fn": "EMR.getUserHashData", "offset": [935, 973], "op": "PUSH2", "path": "2", "value": "0x350"}, "842": {"fn": "EMR.getUserHashData", "offset": [935, 973], "op": "SWAP2", "path": "2"}, "843": {"fn": "EMR.getUserHashData", "offset": [935, 973], "op": "SWAP1", "path": "2"}, "844": {"fn": "EMR.getUserHashData", "offset": [935, 973], "op": "PUSH2", "path": "2", "value": "0x80C"}, "847": {"fn": "EMR.getUserHashData", "jump": "i", "offset": [935, 973], "op": "JUMP", "path": "2"}, "848": {"fn": "EMR.getUserHashData", "offset": [935, 973], "op": "JUMPDEST", "path": "2"}, "849": {"fn": "EMR.getUserHashData", "offset": [935, 973], "op": "PUSH1", "path": "2", "value": "0x40"}, "851": {"fn": "EMR.getUserHashData", "offset": [935, 973], "op": "MLOAD", "path": "2"}, "852": {"fn": "EMR.getUserHashData", "offset": [935, 973], "op": "SWAP1", "path": "2"}, "853": {"fn": "EMR.getUserHashData", "offset": [935, 973], "op": "DUP2", "path": "2"}, "854": {"fn": "EMR.getUserHashData", "offset": [935, 973], "op": "SWAP1", "path": "2"}, "855": {"fn": "EMR.getUserHashData", "offset": [935, 973], "op": "SUB", "path": "2"}, "856": {"fn": "EMR.getUserHashData", "offset": [935, 973], "op": "DUP2", "path": "2"}, "857": {"fn": "EMR.getUserHashData", "offset": [935, 973], "op": "KECCAK256", "path": "2"}, "858": {"fn": "EMR.getUserHashData", "offset": [935, 973], "op": "SWAP1", "path": "2"}, "859": {"fn": "EMR.getUserHashData", "offset": [952, 962], "op": "CALLER", "path": "2"}, "860": {"fn": "EMR.getUserHashData", "offset": [952, 962], "op": "SWAP1", "path": "2"}, "861": {"fn": "EMR.getUserHashData", "offset": [935, 973], "op": "PUSH32", "path": "2", "value": "0x5159C5254A9DC3A6D84C7424B5E5032BA56A962DFEE368EB1F8BFF7D119E69B8"}, "894": {"fn": "EMR.getUserHashData", "offset": [935, 973], "op": "SWAP1", "path": "2"}, "895": {"fn": "EMR.getUserHashData", "offset": [935, 973], "op": "PUSH1", "path": "2", "value": "0x0"}, "897": {"fn": "EMR.getUserHashData", "offset": [935, 973], "op": "SWAP1", "path": "2"}, "898": {"fn": "EMR.getUserHashData", "offset": [935, 973], "op": "LOG3", "path": "2"}, "899": {"fn": "EMR.getUserHashData", "offset": [990, 997], "op": "PUSH1", "path": "2", "statement": 9, "value": "0x1"}, "901": {"fn": "EMR.getUserHashData", "offset": [998, 1006], "op": "DUP3", "path": "2"}, "902": {"fn": "EMR.getUserHashData", "offset": [990, 1007], "op": "PUSH1", "path": "2", "value": "0x40"}, "904": {"fn": "EMR.getUserHashData", "offset": [990, 1007], "op": "MLOAD", "path": "2"}, "905": {"fn": "EMR.getUserHashData", "offset": [990, 1007], "op": "PUSH2", "path": "2", "value": "0x392"}, "908": {"fn": "EMR.getUserHashData", "offset": [990, 1007], "op": "SWAP2", "path": "2"}, "909": {"fn": "EMR.getUserHashData", "offset": [990, 1007], "op": "SWAP1", "path": "2"}, "910": {"fn": "EMR.getUserHashData", "offset": [990, 1007], "op": "PUSH2", "path": "2", "value": "0x80C"}, "913": {"fn": "EMR.getUserHashData", "jump": "i", "offset": [990, 1007], "op": "JUMP", "path": "2"}, "914": {"fn": "EMR.getUserHashData", "offset": [990, 1007], "op": "JUMPDEST", "path": "2"}, "915": {"fn": "EMR.getUserHashData", "offset": [990, 1007], "op": "SWAP1", "path": "2"}, "916": {"fn": "EMR.getUserHashData", "offset": [990, 1007], "op": "DUP2", "path": "2"}, "917": {"fn": "EMR.getUserHashData", "offset": [990, 1007], "op": "MSTORE", "path": "2"}, "918": {"fn": "EMR.getUserHashData", "offset": [990, 1007], "op": "PUSH1", "path": "2", "value": "0x20"}, "920": {"fn": "EMR.getUserHashData", "offset": [990, 1007], "op": "ADD", "path": "2"}, "921": {"fn": "EMR.getUserHashData", "offset": [990, 1007], "op": "PUSH1", "path": "2", "value": "0x40"}, "923": {"fn": "EMR.getUserHashData", "offset": [990, 1007], "op": "MLOAD", "path": "2"}, "924": {"fn": "EMR.getUserHashData", "offset": [990, 1007], "op": "DUP1", "path": "2"}, "925": {"fn": "EMR.getUserHashData", "offset": [990, 1007], "op": "SWAP2", "path": "2"}, "926": {"fn": "EMR.getUserHashData", "offset": [990, 1007], "op": "SUB", "path": "2"}, "927": {"fn": "EMR.getUserHashData", "offset": [990, 1007], "op": "SWAP1", "path": "2"}, "928": {"fn": "EMR.getUserHashData", "offset": [990, 1007], "op": "KECCAK256", "path": "2"}, "929": {"fn": "EMR.getUserHashData", "offset": [990, 1016], "op": "PUSH1", "path": "2", "value": "0x1"}, "931": {"fn": "EMR.getUserHashData", "offset": [990, 1016], "op": "ADD", "path": "2"}, "932": {"fn": "EMR.getUserHashData", "offset": [983, 1016], "op": "DUP1", "path": "2"}, "933": {"fn": "EMR.getUserHashData", "offset": [983, 1016], "op": "SLOAD", "path": "2"}, "934": {"fn": "EMR.getUserHashData", "offset": [983, 1016], "op": "PUSH2", "path": "2", "value": "0x279"}, "937": {"fn": "EMR.getUserHashData", "offset": [983, 1016], "op": "SWAP1", "path": "2"}, "938": {"fn": "EMR.getUserHashData", "offset": [983, 1016], "op": "PUSH2", "path": "2", "value": "0x853"}, "941": {"fn": "EMR.getUserHashData", "jump": "i", "offset": [983, 1016], "op": "JUMP", "path": "2"}, "942": {"fn": "Ownable.renounceOwnership", "offset": [1668, 1769], "op": "JUMPDEST", "path": "0"}, "943": {"fn": "Ownable.owner", "offset": [1082, 1089], "op": "PUSH1", "path": "0", "value": "0x0"}, "945": {"fn": "Ownable.owner", "offset": [1108, 1114], "op": "SLOAD", "path": "0"}, "946": {"op": "PUSH1", "value": "0x1"}, "948": {"op": "PUSH1", "value": "0x1"}, "950": {"op": "PUSH1", "value": "0xA0"}, "952": {"op": "SHL"}, "953": {"op": "SUB"}, "954": {"fn": "Ownable.owner", "offset": [1108, 1114], "op": "AND", "path": "0"}, "955": {"fn": "Context._msgSender", "offset": [719, 729], "op": "CALLER", "path": "1"}, "956": {"offset": [1248, 1271], "op": "EQ", "path": "0"}, "957": {"offset": [1240, 1308], "op": "PUSH2", "path": "0", "value": "0x3D8"}, "960": {"offset": [1240, 1308], "op": "JUMPI", "path": "0"}, "961": {"fn": "Context._msgSender", "offset": [1240, 1308], "op": "PUSH1", "path": "0", "value": "0x40"}, "963": {"fn": "Context._msgSender", "offset": [1240, 1308], "op": "MLOAD", "path": "0"}, "964": {"op": "PUSH3", "value": "0x461BCD"}, "968": {"op": "PUSH1", "value": "0xE5"}, "970": {"op": "SHL"}, "971": {"offset": [1240, 1308], "op": "DUP2", "path": "0"}, "972": {"fn": "Context._msgSender", "offset": [1240, 1308], "op": "MSTORE", "path": "0"}, "973": {"fn": "Context._msgSender", "offset": [1240, 1308], "op": "PUSH1", "path": "0", "value": "0x4"}, "975": {"fn": "Context._msgSender", "offset": [1240, 1308], "op": "ADD", "path": "0"}, "976": {"fn": "Context._msgSender", "offset": [1240, 1308], "op": "PUSH2", "path": "0", "value": "0x146"}, "979": {"fn": "Context._msgSender", "offset": [1240, 1308], "op": "SWAP1", "path": "0"}, "980": {"fn": "Context._msgSender", "offset": [1240, 1308], "op": "PUSH2", "path": "0", "value": "0x7D7"}, "983": {"fn": "Context._msgSender", "jump": "i", "offset": [1240, 1308], "op": "JUMP", "path": "0"}, "984": {"fn": "Context._msgSender", "offset": [1240, 1308], "op": "JUMPDEST", "path": "0"}, "985": {"fn": "Ownable.renounceOwnership", "offset": [1732, 1762], "op": "PUSH2", "path": "0", "statement": 10, "value": "0x3E2"}, "988": {"fn": "Ownable.renounceOwnership", "offset": [1759, 1760], "op": "PUSH1", "path": "0", "value": "0x0"}, "990": {"fn": "Ownable.renounceOwnership", "offset": [1732, 1750], "op": "PUSH2", "path": "0", "value": "0x517"}, "993": {"fn": "Ownable.renounceOwnership", "jump": "i", "offset": [1732, 1762], "op": "JUMP", "path": "0"}, "994": {"fn": "Ownable.renounceOwnership", "offset": [1732, 1762], "op": "JUMPDEST", "path": "0"}, "995": {"fn": "Ownable.renounceOwnership", "jump": "o", "offset": [1668, 1769], "op": "JUMP", "path": "0"}, "996": {"fn": "Ownable.transferOwnership", "offset": [1918, 2116], "op": "JUMPDEST", "path": "0"}, "997": {"fn": "Ownable.owner", "offset": [1082, 1089], "op": "PUSH1", "path": "0", "value": "0x0"}, "999": {"fn": "Ownable.owner", "offset": [1108, 1114], "op": "SLOAD", "path": "0"}, "1000": {"op": "PUSH1", "value": "0x1"}, "1002": {"op": "PUSH1", "value": "0x1"}, "1004": {"op": "PUSH1", "value": "0xA0"}, "1006": {"op": "SHL"}, "1007": {"op": "SUB"}, "1008": {"fn": "Ownable.owner", "offset": [1108, 1114], "op": "AND", "path": "0"}, "1009": {"fn": "Context._msgSender", "offset": [719, 729], "op": "CALLER", "path": "1"}, "1010": {"offset": [1248, 1271], "op": "EQ", "path": "0"}, "1011": {"offset": [1240, 1308], "op": "PUSH2", "path": "0", "value": "0x40E"}, "1014": {"offset": [1240, 1308], "op": "JUMPI", "path": "0"}, "1015": {"fn": "Context._msgSender", "offset": [1240, 1308], "op": "PUSH1", "path": "0", "value": "0x40"}, "1017": {"fn": "Context._msgSender", "offset": [1240, 1308], "op": "MLOAD", "path": "0"}, "1018": {"op": "PUSH3", "value": "0x461BCD"}, "1022": {"op": "PUSH1", "value": "0xE5"}, "1024": {"op": "SHL"}, "1025": {"offset": [1240, 1308], "op": "DUP2", "path": "0"}, "1026": {"fn": "Context._msgSender", "offset": [1240, 1308], "op": "MSTORE", "path": "0"}, "1027": {"fn": "Context._msgSender", "offset": [1240, 1308], "op": "PUSH1", "path": "0", "value": "0x4"}, "1029": {"fn": "Context._msgSender", "offset": [1240, 1308], "op": "ADD", "path": "0"}, "1030": {"fn": "Context._msgSender", "offset": [1240, 1308], "op": "PUSH2", "path": "0", "value": "0x146"}, "1033": {"fn": "Context._msgSender", "offset": [1240, 1308], "op": "SWAP1", "path": "0"}, "1034": {"fn": "Context._msgSender", "offset": [1240, 1308], "op": "PUSH2", "path": "0", "value": "0x7D7"}, "1037": {"fn": "Context._msgSender", "jump": "i", "offset": [1240, 1308], "op": "JUMP", "path": "0"}, "1038": {"fn": "Context._msgSender", "offset": [1240, 1308], "op": "JUMPDEST", "path": "0"}, "1039": {"op": "PUSH1", "value": "0x1"}, "1041": {"op": "PUSH1", "value": "0x1"}, "1043": {"op": "PUSH1", "value": "0xA0"}, "1045": {"op": "SHL"}, "1046": {"op": "SUB"}, "1047": {"fn": "Ownable.transferOwnership", "offset": [2006, 2028], "op": "DUP2", "path": "0", "statement": 11}, "1048": {"branch": 20, "fn": "Ownable.transferOwnership", "offset": [2006, 2028], "op": "AND", "path": "0"}, "1049": {"fn": "Ownable.transferOwnership", "offset": [1998, 2071], "op": "PUSH2", "path": "0", "value": "0x473"}, "1052": {"branch": 20, "fn": "Ownable.transferOwnership", "offset": [1998, 2071], "op": "JUMPI", "path": "0"}, "1053": {"fn": "Ownable.transferOwnership", "offset": [1998, 2071], "op": "PUSH1", "path": "0", "value": "0x40"}, "1055": {"fn": "Ownable.transferOwnership", "offset": [1998, 2071], "op": "MLOAD", "path": "0"}, "1056": {"op": "PUSH3", "value": "0x461BCD"}, "1060": {"op": "PUSH1", "value": "0xE5"}, "1062": {"op": "SHL"}, "1063": {"fn": "Ownable.transferOwnership", "offset": [1998, 2071], "op": "DUP2", "path": "0"}, "1064": {"fn": "Ownable.transferOwnership", "offset": [1998, 2071], "op": "MSTORE", "path": "0"}, "1065": {"op": "PUSH1", "value": "0x20"}, "1067": {"fn": "Ownable.transferOwnership", "offset": [1998, 2071], "op": "PUSH1", "path": "0", "value": "0x4"}, "1069": {"fn": "Ownable.transferOwnership", "offset": [1998, 2071], "op": "DUP3", "path": "0"}, "1070": {"fn": "Ownable.transferOwnership", "offset": [1998, 2071], "op": "ADD", "path": "0"}, "1071": {"op": "MSTORE"}, "1072": {"op": "PUSH1", "value": "0x26"}, "1074": {"op": "PUSH1", "value": "0x24"}, "1076": {"op": "DUP3"}, "1077": {"op": "ADD"}, "1078": {"op": "MSTORE"}, "1079": {"op": "PUSH32", "value": "0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"}, "1112": {"op": "PUSH1", "value": "0x44"}, "1114": {"op": "DUP3"}, "1115": {"op": "ADD"}, "1116": {"op": "MSTORE"}, "1117": {"op": "PUSH6", "value": "0x646472657373"}, "1124": {"op": "PUSH1", "value": "0xD0"}, "1126": {"op": "SHL"}, "1127": {"op": "PUSH1", "value": "0x64"}, "1129": {"op": "DUP3"}, "1130": {"op": "ADD"}, "1131": {"op": "MSTORE"}, "1132": {"op": "PUSH1", "value": "0x84"}, "1134": {"op": "ADD"}, "1135": {"fn": "Ownable.transferOwnership", "offset": [1998, 2071], "op": "PUSH2", "path": "0", "value": "0x146"}, "1138": {"op": "JUMP"}, "1139": {"fn": "Ownable.transferOwnership", "offset": [1998, 2071], "op": "JUMPDEST", "path": "0"}, "1140": {"fn": "Ownable.transferOwnership", "offset": [2081, 2109], "op": "PUSH2", "path": "0", "statement": 12, "value": "0x47C"}, "1143": {"fn": "Ownable.transferOwnership", "offset": [2100, 2108], "op": "DUP2", "path": "0"}, "1144": {"fn": "Ownable.transferOwnership", "offset": [2081, 2099], "op": "PUSH2", "path": "0", "value": "0x517"}, "1147": {"fn": "Ownable.transferOwnership", "jump": "i", "offset": [2081, 2109], "op": "JUMP", "path": "0"}, "1148": {"fn": "Ownable.transferOwnership", "offset": [2081, 2109], "op": "JUMPDEST", "path": "0"}, "1149": {"fn": "Ownable.transferOwnership", "offset": [1918, 2116], "op": "POP", "path": "0"}, "1150": {"fn": "Ownable.transferOwnership", "jump": "o", "offset": [1918, 2116], "op": "JUMP", "path": "0"}, "1151": {"fn": "EMR.addUserKey", "offset": [1029, 1239], "op": "JUMPDEST", "path": "2"}, "1152": {"fn": "Ownable.owner", "offset": [1082, 1089], "op": "PUSH1", "path": "0", "value": "0x0"}, "1154": {"fn": "Ownable.owner", "offset": [1108, 1114], "op": "SLOAD", "path": "0"}, "1155": {"op": "PUSH1", "value": "0x1"}, "1157": {"op": "PUSH1", "value": "0x1"}, "1159": {"op": "PUSH1", "value": "0xA0"}, "1161": {"op": "SHL"}, "1162": {"op": "SUB"}, "1163": {"fn": "Ownable.owner", "offset": [1108, 1114], "op": "AND", "path": "0"}, "1164": {"fn": "Context._msgSender", "offset": [719, 729], "op": "CALLER", "path": "1"}, "1165": {"offset": [1248, 1271], "op": "EQ", "path": "0"}, "1166": {"offset": [1240, 1308], "op": "PUSH2", "path": "0", "value": "0x4A9"}, "1169": {"offset": [1240, 1308], "op": "JUMPI", "path": "0"}, "1170": {"fn": "Context._msgSender", "offset": [1240, 1308], "op": "PUSH1", "path": "0", "value": "0x40"}, "1172": {"fn": "Context._msgSender", "offset": [1240, 1308], "op": "MLOAD", "path": "0"}, "1173": {"op": "PUSH3", "value": "0x461BCD"}, "1177": {"op": "PUSH1", "value": "0xE5"}, "1179": {"op": "SHL"}, "1180": {"offset": [1240, 1308], "op": "DUP2", "path": "0"}, "1181": {"fn": "Context._msgSender", "offset": [1240, 1308], "op": "MSTORE", "path": "0"}, "1182": {"fn": "Context._msgSender", "offset": [1240, 1308], "op": "PUSH1", "path": "0", "value": "0x4"}, "1184": {"fn": "Context._msgSender", "offset": [1240, 1308], "op": "ADD", "path": "0"}, "1185": {"fn": "Context._msgSender", "offset": [1240, 1308], "op": "PUSH2", "path": "0", "value": "0x146"}, "1188": {"fn": "Context._msgSender", "offset": [1240, 1308], "op": "SWAP1", "path": "0"}, "1189": {"fn": "Context._msgSender", "offset": [1240, 1308], "op": "PUSH2", "path": "0", "value": "0x7D7"}, "1192": {"fn": "Context._msgSender", "jump": "i", "offset": [1240, 1308], "op": "JUMP", "path": "0"}, "1193": {"fn": "Context._msgSender", "offset": [1240, 1308], "op": "JUMPDEST", "path": "0"}, "1194": {"fn": "EMR.addUserKey", "offset": [1178, 1189], "op": "DUP1", "path": "2", "statement": 13}, "1195": {"fn": "EMR.addUserKey", "offset": [1147, 1154], "op": "PUSH1", "path": "2", "value": "0x1"}, "1197": {"fn": "EMR.addUserKey", "offset": [1155, 1163], "op": "DUP4", "path": "2"}, "1198": {"fn": "EMR.addUserKey", "offset": [1147, 1164], "op": "PUSH1", "path": "2", "value": "0x40"}, "1200": {"fn": "EMR.addUserKey", "offset": [1147, 1164], "op": "MLOAD", "path": "2"}, "1201": {"fn": "EMR.addUserKey", "offset": [1147, 1164], "op": "PUSH2", "path": "2", "value": "0x4BA"}, "1204": {"fn": "EMR.addUserKey", "offset": [1147, 1164], "op": "SWAP2", "path": "2"}, "1205": {"fn": "EMR.addUserKey", "offset": [1147, 1164], "op": "SWAP1", "path": "2"}, "1206": {"fn": "EMR.addUserKey", "offset": [1147, 1164], "op": "PUSH2", "path": "2", "value": "0x80C"}, "1209": {"fn": "EMR.addUserKey", "jump": "i", "offset": [1147, 1164], "op": "JUMP", "path": "2"}, "1210": {"fn": "EMR.addUserKey", "offset": [1147, 1164], "op": "JUMPDEST", "path": "2"}, "1211": {"fn": "EMR.addUserKey", "offset": [1147, 1164], "op": "SWAP1", "path": "2"}, "1212": {"fn": "EMR.addUserKey", "offset": [1147, 1164], "op": "DUP2", "path": "2"}, "1213": {"fn": "EMR.addUserKey", "offset": [1147, 1164], "op": "MSTORE", "path": "2"}, "1214": {"fn": "EMR.addUserKey", "offset": [1147, 1164], "op": "PUSH1", "path": "2", "value": "0x20"}, "1216": {"fn": "EMR.addUserKey", "offset": [1147, 1164], "op": "ADD", "path": "2"}, "1217": {"fn": "EMR.addUserKey", "offset": [1147, 1164], "op": "PUSH1", "path": "2", "value": "0x40"}, "1219": {"fn": "EMR.addUserKey", "offset": [1147, 1164], "op": "MLOAD", "path": "2"}, "1220": {"fn": "EMR.addUserKey", "offset": [1147, 1164], "op": "DUP1", "path": "2"}, "1221": {"fn": "EMR.addUserKey", "offset": [1147, 1164], "op": "SWAP2", "path": "2"}, "1222": {"fn": "EMR.addUserKey", "offset": [1147, 1164], "op": "SUB", "path": "2"}, "1223": {"fn": "EMR.addUserKey", "offset": [1147, 1164], "op": "SWAP1", "path": "2"}, "1224": {"fn": "EMR.addUserKey", "offset": [1147, 1164], "op": "KECCAK256", "path": "2"}, "1225": {"fn": "EMR.addUserKey", "offset": [1147, 1175], "op": "PUSH1", "path": "2", "value": "0x0"}, "1227": {"fn": "EMR.addUserKey", "offset": [1147, 1175], "op": "ADD", "path": "2"}, "1228": {"fn": "EMR.addUserKey", "offset": [1147, 1189], "op": "SWAP1", "path": "2"}, "1229": {"fn": "EMR.addUserKey", "offset": [1147, 1189], "op": "DUP1", "path": "2"}, "1230": {"fn": "EMR.addUserKey", "offset": [1147, 1189], "op": "MLOAD", "path": "2"}, "1231": {"fn": "EMR.addUserKey", "offset": [1147, 1189], "op": "SWAP1", "path": "2"}, "1232": {"fn": "EMR.addUserKey", "offset": [1147, 1189], "op": "PUSH1", "path": "2", "value": "0x20"}, "1234": {"fn": "EMR.addUserKey", "offset": [1147, 1189], "op": "ADD", "path": "2"}, "1235": {"fn": "EMR.addUserKey", "offset": [1147, 1189], "op": "SWAP1", "path": "2"}, "1236": {"fn": "EMR.addUserKey", "offset": [1147, 1189], "op": "PUSH2", "path": "2", "value": "0x4DE"}, "1239": {"fn": "EMR.addUserKey", "offset": [1147, 1189], "op": "SWAP3", "path": "2"}, "1240": {"fn": "EMR.addUserKey", "offset": [1147, 1189], "op": "SWAP2", "path": "2"}, "1241": {"fn": "EMR.addUserKey", "offset": [1147, 1189], "op": "SWAP1", "path": "2"}, "1242": {"fn": "EMR.addUserKey", "offset": [1147, 1189], "op": "PUSH2", "path": "2", "value": "0x567"}, "1245": {"fn": "EMR.addUserKey", "jump": "i", "offset": [1147, 1189], "op": "JUMP", "path": "2"}, "1246": {"fn": "EMR.addUserKey", "offset": [1147, 1189], "op": "JUMPDEST", "path": "2"}, "1247": {"fn": "EMR.addUserKey", "offset": [1147, 1189], "op": "POP", "path": "2"}, "1248": {"fn": "EMR.addUserKey", "offset": [1228, 1232], "op": "PUSH1", "path": "2", "statement": 14, "value": "0x1"}, "1250": {"fn": "EMR.addUserKey", "offset": [1199, 1206], "op": "DUP1", "path": "2"}, "1251": {"fn": "EMR.addUserKey", "offset": [1207, 1215], "op": "DUP4", "path": "2"}, "1252": {"fn": "EMR.addUserKey", "offset": [1199, 1216], "op": "PUSH1", "path": "2", "value": "0x40"}, "1254": {"fn": "EMR.addUserKey", "offset": [1199, 1216], "op": "MLOAD", "path": "2"}, "1255": {"fn": "EMR.addUserKey", "offset": [1199, 1216], "op": "PUSH2", "path": "2", "value": "0x4F0"}, "1258": {"fn": "EMR.addUserKey", "offset": [1199, 1216], "op": "SWAP2", "path": "2"}, "1259": {"fn": "EMR.addUserKey", "offset": [1199, 1216], "op": "SWAP1", "path": "2"}, "1260": {"fn": "EMR.addUserKey", "offset": [1199, 1216], "op": "PUSH2", "path": "2", "value": "0x80C"}, "1263": {"fn": "EMR.addUserKey", "jump": "i", "offset": [1199, 1216], "op": "JUMP", "path": "2"}, "1264": {"fn": "EMR.addUserKey", "offset": [1199, 1216], "op": "JUMPDEST", "path": "2"}, "1265": {"fn": "EMR.addUserKey", "offset": [1199, 1216], "op": "SWAP1", "path": "2"}, "1266": {"fn": "EMR.addUserKey", "offset": [1199, 1216], "op": "DUP2", "path": "2"}, "1267": {"fn": "EMR.addUserKey", "offset": [1199, 1216], "op": "MSTORE", "path": "2"}, "1268": {"fn": "EMR.addUserKey", "offset": [1199, 1216], "op": "PUSH1", "path": "2", "value": "0x40"}, "1270": {"fn": "EMR.addUserKey", "offset": [1199, 1216], "op": "MLOAD", "path": "2"}, "1271": {"fn": "EMR.addUserKey", "offset": [1199, 1216], "op": "SWAP1", "path": "2"}, "1272": {"fn": "EMR.addUserKey", "offset": [1199, 1216], "op": "DUP2", "path": "2"}, "1273": {"fn": "EMR.addUserKey", "offset": [1199, 1216], "op": "SWAP1", "path": "2"}, "1274": {"fn": "EMR.addUserKey", "offset": [1199, 1216], "op": "SUB", "path": "2"}, "1275": {"fn": "EMR.addUserKey", "offset": [1199, 1216], "op": "PUSH1", "path": "2", "value": "0x20"}, "1277": {"fn": "EMR.addUserKey", "offset": [1199, 1216], "op": "ADD", "path": "2"}, "1278": {"fn": "EMR.addUserKey", "offset": [1199, 1216], "op": "SWAP1", "path": "2"}, "1279": {"fn": "EMR.addUserKey", "offset": [1199, 1216], "op": "KECCAK256", "path": "2"}, "1280": {"fn": "EMR.addUserKey", "offset": [1199, 1225], "op": "PUSH1", "path": "2", "value": "0x2"}, "1282": {"fn": "EMR.addUserKey", "offset": [1199, 1225], "op": "ADD", "path": "2"}, "1283": {"fn": "EMR.addUserKey", "offset": [1199, 1232], "op": "DUP1", "path": "2"}, "1284": {"fn": "EMR.addUserKey", "offset": [1199, 1232], "op": "SLOAD", "path": "2"}, "1285": {"fn": "EMR.addUserKey", "offset": [1199, 1232], "op": "SWAP2", "path": "2"}, "1286": {"fn": "EMR.addUserKey", "offset": [1199, 1232], "op": "ISZERO", "path": "2"}, "1287": {"fn": "EMR.addUserKey", "offset": [1199, 1232], "op": "ISZERO", "path": "2"}, "1288": {"op": "PUSH1", "value": "0xFF"}, "1290": {"op": "NOT"}, "1291": {"fn": "EMR.addUserKey", "offset": [1199, 1232], "op": "SWAP1", "path": "2"}, "1292": {"fn": "EMR.addUserKey", "offset": [1199, 1232], "op": "SWAP3", "path": "2"}, "1293": {"fn": "EMR.addUserKey", "offset": [1199, 1232], "op": "AND", "path": "2"}, "1294": {"fn": "EMR.addUserKey", "offset": [1199, 1232], "op": "SWAP2", "path": "2"}, "1295": {"fn": "EMR.addUserKey", "offset": [1199, 1232], "op": "SWAP1", "path": "2"}, "1296": {"fn": "EMR.addUserKey", "offset": [1199, 1232], "op": "SWAP2", "path": "2"}, "1297": {"fn": "EMR.addUserKey", "offset": [1199, 1232], "op": "OR", "path": "2"}, "1298": {"fn": "EMR.addUserKey", "offset": [1199, 1232], "op": "SWAP1", "path": "2"}, "1299": {"fn": "EMR.addUserKey", "offset": [1199, 1232], "op": "SSTORE", "path": "2"}, "1300": {"op": "POP"}, "1301": {"op": "POP"}, "1302": {"fn": "EMR.addUserKey", "jump": "o", "offset": [1029, 1239], "op": "JUMP", "path": "2"}, "1303": {"fn": "Ownable._transferOwnership", "offset": [2270, 2457], "op": "JUMPDEST", "path": "0"}, "1304": {"fn": "Ownable._transferOwnership", "offset": [2343, 2359], "op": "PUSH1", "path": "0", "value": "0x0"}, "1306": {"fn": "Ownable._transferOwnership", "offset": [2362, 2368], "op": "DUP1", "path": "0"}, "1307": {"fn": "Ownable._transferOwnership", "offset": [2362, 2368], "op": "SLOAD", "path": "0"}, "1308": {"op": "PUSH1", "value": "0x1"}, "1310": {"op": "PUSH1", "value": "0x1"}, "1312": {"op": "PUSH1", "value": "0xA0"}, "1314": {"op": "SHL"}, "1315": {"op": "SUB"}, "1316": {"fn": "Ownable._transferOwnership", "offset": [2378, 2395], "op": "DUP4", "path": "0", "statement": 15}, "1317": {"fn": "Ownable._transferOwnership", "offset": [2378, 2395], "op": "DUP2", "path": "0"}, "1318": {"fn": "Ownable._transferOwnership", "offset": [2378, 2395], "op": "AND", "path": "0"}, "1319": {"op": "PUSH1", "value": "0x1"}, "1321": {"op": "PUSH1", "value": "0x1"}, "1323": {"op": "PUSH1", "value": "0xA0"}, "1325": {"op": "SHL"}, "1326": {"op": "SUB"}, "1327": {"op": "NOT"}, "1328": {"fn": "Ownable._transferOwnership", "offset": [2378, 2395], "op": "DUP4", "path": "0"}, "1329": {"fn": "Ownable._transferOwnership", "offset": [2378, 2395], "op": "AND", "path": "0"}, "1330": {"fn": "Ownable._transferOwnership", "offset": [2378, 2395], "op": "DUP2", "path": "0"}, "1331": {"fn": "Ownable._transferOwnership", "offset": [2378, 2395], "op": "OR", "path": "0"}, "1332": {"fn": "Ownable._transferOwnership", "offset": [2378, 2395], "op": "DUP5", "path": "0"}, "1333": {"fn": "Ownable._transferOwnership", "offset": [2378, 2395], "op": "SSTORE", "path": "0"}, "1334": {"fn": "Ownable._transferOwnership", "offset": [2410, 2450], "op": "PUSH1", "path": "0", "statement": 16, "value": "0x40"}, "1336": {"fn": "Ownable._transferOwnership", "offset": [2410, 2450], "op": "MLOAD", "path": "0"}, "1337": {"fn": "Ownable._transferOwnership", "offset": [2362, 2368], "op": "SWAP2", "path": "0"}, "1338": {"fn": "Ownable._transferOwnership", "offset": [2362, 2368], "op": "SWAP1", "path": "0"}, "1339": {"fn": "Ownable._transferOwnership", "offset": [2362, 2368], "op": "SWAP3", "path": "0"}, "1340": {"fn": "Ownable._transferOwnership", "offset": [2362, 2368], "op": "AND", "path": "0"}, "1341": {"fn": "Ownable._transferOwnership", "offset": [2362, 2368], "op": "SWAP3", "path": "0"}, "1342": {"fn": "Ownable._transferOwnership", "offset": [2362, 2368], "op": "DUP4", "path": "0"}, "1343": {"fn": "Ownable._transferOwnership", "offset": [2362, 2368], "op": "SWAP2", "path": "0"}, "1344": {"fn": "Ownable._transferOwnership", "offset": [2410, 2450], "op": "PUSH32", "path": "0", "value": "0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"}, "1377": {"fn": "Ownable._transferOwnership", "offset": [2410, 2450], "op": "SWAP2", "path": "0"}, "1378": {"fn": "Ownable._transferOwnership", "offset": [2343, 2359], "op": "SWAP1", "path": "0"}, "1379": {"fn": "Ownable._transferOwnership", "offset": [2410, 2450], "op": "LOG3", "path": "0"}, "1380": {"fn": "Ownable._transferOwnership", "offset": [2333, 2457], "op": "POP", "path": "0"}, "1381": {"fn": "Ownable._transferOwnership", "offset": [2270, 2457], "op": "POP", "path": "0"}, "1382": {"fn": "Ownable._transferOwnership", "jump": "o", "offset": [2270, 2457], "op": "JUMP", "path": "0"}, "1383": {"op": "JUMPDEST"}, "1384": {"op": "DUP3"}, "1385": {"op": "DUP1"}, "1386": {"op": "SLOAD"}, "1387": {"op": "PUSH2", "value": "0x573"}, "1390": {"op": "SWAP1"}, "1391": {"op": "PUSH2", "value": "0x853"}, "1394": {"jump": "i", "op": "JUMP"}, "1395": {"op": "JUMPDEST"}, "1396": {"op": "SWAP1"}, "1397": {"op": "PUSH1", "value": "0x0"}, "1399": {"op": "MSTORE"}, "1400": {"op": "PUSH1", "value": "0x20"}, "1402": {"op": "PUSH1", "value": "0x0"}, "1404": {"op": "KECCAK256"}, "1405": {"op": "SWAP1"}, "1406": {"op": "PUSH1", "value": "0x1F"}, "1408": {"op": "ADD"}, "1409": {"op": "PUSH1", "value": "0x20"}, "1411": {"op": "SWAP1"}, "1412": {"op": "DIV"}, "1413": {"op": "DUP2"}, "1414": {"op": "ADD"}, "1415": {"op": "SWAP3"}, "1416": {"op": "DUP3"}, "1417": {"op": "PUSH2", "value": "0x595"}, "1420": {"op": "JUMPI"}, "1421": {"op": "PUSH1", "value": "0x0"}, "1423": {"op": "DUP6"}, "1424": {"op": "SSTORE"}, "1425": {"op": "PUSH2", "value": "0x5DB"}, "1428": {"op": "JUMP"}, "1429": {"op": "JUMPDEST"}, "1430": {"op": "DUP3"}, "1431": {"op": "PUSH1", "value": "0x1F"}, "1433": {"op": "LT"}, "1434": {"op": "PUSH2", "value": "0x5AE"}, "1437": {"op": "JUMPI"}, "1438": {"op": "DUP1"}, "1439": {"op": "MLOAD"}, "1440": {"op": "PUSH1", "value": "0xFF"}, "1442": {"op": "NOT"}, "1443": {"op": "AND"}, "1444": {"op": "DUP4"}, "1445": {"op": "DUP1"}, "1446": {"op": "ADD"}, "1447": {"op": "OR"}, "1448": {"op": "DUP6"}, "1449": {"op": "SSTORE"}, "1450": {"op": "PUSH2", "value": "0x5DB"}, "1453": {"op": "JUMP"}, "1454": {"op": "JUMPDEST"}, "1455": {"op": "DUP3"}, "1456": {"op": "DUP1"}, "1457": {"op": "ADD"}, "1458": {"op": "PUSH1", "value": "0x1"}, "1460": {"op": "ADD"}, "1461": {"op": "DUP6"}, "1462": {"op": "SSTORE"}, "1463": {"op": "DUP3"}, "1464": {"op": "ISZERO"}, "1465": {"op": "PUSH2", "value": "0x5DB"}, "1468": {"op": "JUMPI"}, "1469": {"op": "SWAP2"}, "1470": {"op": "DUP3"}, "1471": {"op": "ADD"}, "1472": {"op": "JUMPDEST"}, "1473": {"op": "DUP3"}, "1474": {"op": "DUP2"}, "1475": {"op": "GT"}, "1476": {"op": "ISZERO"}, "1477": {"op": "PUSH2", "value": "0x5DB"}, "1480": {"op": "JUMPI"}, "1481": {"op": "DUP3"}, "1482": {"op": "MLOAD"}, "1483": {"op": "DUP3"}, "1484": {"op": "SSTORE"}, "1485": {"op": "SWAP2"}, "1486": {"op": "PUSH1", "value": "0x20"}, "1488": {"op": "ADD"}, "1489": {"op": "SWAP2"}, "1490": {"op": "SWAP1"}, "1491": {"op": "PUSH1", "value": "0x1"}, "1493": {"op": "ADD"}, "1494": {"op": "SWAP1"}, "1495": {"op": "PUSH2", "value": "0x5C0"}, "1498": {"op": "JUMP"}, "1499": {"op": "JUMPDEST"}, "1500": {"op": "POP"}, "1501": {"op": "PUSH2", "value": "0x5E7"}, "1504": {"op": "SWAP3"}, "1505": {"op": "SWAP2"}, "1506": {"op": "POP"}, "1507": {"op": "PUSH2", "value": "0x5EB"}, "1510": {"jump": "i", "op": "JUMP"}, "1511": {"op": "JUMPDEST"}, "1512": {"op": "POP"}, "1513": {"op": "SWAP1"}, "1514": {"jump": "o", "op": "JUMP"}, "1515": {"op": "JUMPDEST"}, "1516": {"op": "JUMPDEST"}, "1517": {"op": "DUP1"}, "1518": {"op": "DUP3"}, "1519": {"op": "GT"}, "1520": {"op": "ISZERO"}, "1521": {"op": "PUSH2", "value": "0x5E7"}, "1524": {"op": "JUMPI"}, "1525": {"op": "PUSH1", "value": "0x0"}, "1527": {"op": "DUP2"}, "1528": {"op": "SSTORE"}, "1529": {"op": "PUSH1", "value": "0x1"}, "1531": {"op": "ADD"}, "1532": {"op": "PUSH2", "value": "0x5EC"}, "1535": {"op": "JUMP"}, "1536": {"op": "JUMPDEST"}, "1537": {"op": "PUSH4", "value": "0x4E487B71"}, "1542": {"op": "PUSH1", "value": "0xE0"}, "1544": {"op": "SHL"}, "1545": {"op": "PUSH1", "value": "0x0"}, "1547": {"op": "MSTORE"}, "1548": {"op": "PUSH1", "value": "0x41"}, "1550": {"op": "PUSH1", "value": "0x4"}, "1552": {"op": "MSTORE"}, "1553": {"op": "PUSH1", "value": "0x24"}, "1555": {"op": "PUSH1", "value": "0x0"}, "1557": {"op": "REVERT"}, "1558": {"op": "JUMPDEST"}, "1559": {"op": "PUSH1", "value": "0x0"}, "1561": {"op": "DUP3"}, "1562": {"op": "PUSH1", "value": "0x1F"}, "1564": {"op": "DUP4"}, "1565": {"op": "ADD"}, "1566": {"op": "SLT"}, "1567": {"op": "PUSH2", "value": "0x627"}, "1570": {"op": "JUMPI"}, "1571": {"op": "PUSH1", "value": "0x0"}, "1573": {"op": "DUP1"}, "1574": {"op": "REVERT"}, "1575": {"op": "JUMPDEST"}, "1576": {"op": "DUP2"}, "1577": {"op": "CALLDATALOAD"}, "1578": {"op": "PUSH8", "value": "0xFFFFFFFFFFFFFFFF"}, "1587": {"op": "DUP1"}, "1588": {"op": "DUP3"}, "1589": {"op": "GT"}, "1590": {"op": "ISZERO"}, "1591": {"op": "PUSH2", "value": "0x642"}, "1594": {"op": "JUMPI"}, "1595": {"op": "PUSH2", "value": "0x642"}, "1598": {"op": "PUSH2", "value": "0x600"}, "1601": {"jump": "i", "op": "JUMP"}, "1602": {"op": "JUMPDEST"}, "1603": {"op": "PUSH1", "value": "0x40"}, "1605": {"op": "MLOAD"}, "1606": {"op": "PUSH1", "value": "0x1F"}, "1608": {"op": "DUP4"}, "1609": {"op": "ADD"}, "1610": {"op": "PUSH1", "value": "0x1F"}, "1612": {"op": "NOT"}, "1613": {"op": "SWAP1"}, "1614": {"op": "DUP2"}, "1615": {"op": "AND"}, "1616": {"op": "PUSH1", "value": "0x3F"}, "1618": {"op": "ADD"}, "1619": {"op": "AND"}, "1620": {"op": "DUP2"}, "1621": {"op": "ADD"}, "1622": {"op": "SWAP1"}, "1623": {"op": "DUP3"}, "1624": {"op": "DUP3"}, "1625": {"op": "GT"}, "1626": {"op": "DUP2"}, "1627": {"op": "DUP4"}, "1628": {"op": "LT"}, "1629": {"op": "OR"}, "1630": {"op": "ISZERO"}, "1631": {"op": "PUSH2", "value": "0x66A"}, "1634": {"op": "JUMPI"}, "1635": {"op": "PUSH2", "value": "0x66A"}, "1638": {"op": "PUSH2", "value": "0x600"}, "1641": {"jump": "i", "op": "JUMP"}, "1642": {"op": "JUMPDEST"}, "1643": {"op": "DUP2"}, "1644": {"op": "PUSH1", "value": "0x40"}, "1646": {"op": "MSTORE"}, "1647": {"op": "DUP4"}, "1648": {"op": "DUP2"}, "1649": {"op": "MSTORE"}, "1650": {"op": "DUP7"}, "1651": {"op": "PUSH1", "value": "0x20"}, "1653": {"op": "DUP6"}, "1654": {"op": "DUP9"}, "1655": {"op": "ADD"}, "1656": {"op": "ADD"}, "1657": {"op": "GT"}, "1658": {"op": "ISZERO"}, "1659": {"op": "PUSH2", "value": "0x683"}, "1662": {"op": "JUMPI"}, "1663": {"op": "PUSH1", "value": "0x0"}, "1665": {"op": "DUP1"}, "1666": {"op": "REVERT"}, "1667": {"op": "JUMPDEST"}, "1668": {"op": "DUP4"}, "1669": {"op": "PUSH1", "value": "0x20"}, "1671": {"op": "DUP8"}, "1672": {"op": "ADD"}, "1673": {"op": "PUSH1", "value": "0x20"}, "1675": {"op": "DUP4"}, "1676": {"op": "ADD"}, "1677": {"op": "CALLDATACOPY"}, "1678": {"op": "PUSH1", "value": "0x0"}, "1680": {"op": "PUSH1", "value": "0x20"}, "1682": {"op": "DUP6"}, "1683": {"op": "DUP4"}, "1684": {"op": "ADD"}, "1685": {"op": "ADD"}, "1686": {"op": "MSTORE"}, "1687": {"op": "DUP1"}, "1688": {"op": "SWAP5"}, "1689": {"op": "POP"}, "1690": {"op": "POP"}, "1691": {"op": "POP"}, "1692": {"op": "POP"}, "1693": {"op": "POP"}, "1694": {"op": "SWAP3"}, "1695": {"op": "SWAP2"}, "1696": {"op": "POP"}, "1697": {"op": "POP"}, "1698": {"jump": "o", "op": "JUMP"}, "1699": {"op": "JUMPDEST"}, "1700": {"op": "PUSH1", "value": "0x0"}, "1702": {"op": "DUP1"}, "1703": {"op": "PUSH1", "value": "0x40"}, "1705": {"op": "DUP4"}, "1706": {"op": "DUP6"}, "1707": {"op": "SUB"}, "1708": {"op": "SLT"}, "1709": {"op": "ISZERO"}, "1710": {"op": "PUSH2", "value": "0x6B6"}, "1713": {"op": "JUMPI"}, "1714": {"op": "PUSH1", "value": "0x0"}, "1716": {"op": "DUP1"}, "1717": {"op": "REVERT"}, "1718": {"op": "JUMPDEST"}, "1719": {"op": "DUP3"}, "1720": {"op": "CALLDATALOAD"}, "1721": {"op": "PUSH8", "value": "0xFFFFFFFFFFFFFFFF"}, "1730": {"op": "DUP1"}, "1731": {"op": "DUP3"}, "1732": {"op": "GT"}, "1733": {"op": "ISZERO"}, "1734": {"op": "PUSH2", "value": "0x6CE"}, "1737": {"op": "JUMPI"}, "1738": {"op": "PUSH1", "value": "0x0"}, "1740": {"op": "DUP1"}, "1741": {"op": "REVERT"}, "1742": {"op": "JUMPDEST"}, "1743": {"op": "PUSH2", "value": "0x6DA"}, "1746": {"op": "DUP7"}, "1747": {"op": "DUP4"}, "1748": {"op": "DUP8"}, "1749": {"op": "ADD"}, "1750": {"op": "PUSH2", "value": "0x616"}, "1753": {"jump": "i", "op": "JUMP"}, "1754": {"op": "JUMPDEST"}, "1755": {"op": "SWAP4"}, "1756": {"op": "POP"}, "1757": {"op": "PUSH1", "value": "0x20"}, "1759": {"op": "DUP6"}, "1760": {"op": "ADD"}, "1761": {"op": "CALLDATALOAD"}, "1762": {"op": "SWAP2"}, "1763": {"op": "POP"}, "1764": {"op": "DUP1"}, "1765": {"op": "DUP3"}, "1766": {"op": "GT"}, "1767": {"op": "ISZERO"}, "1768": {"op": "PUSH2", "value": "0x6F0"}, "1771": {"op": "JUMPI"}, "1772": {"op": "PUSH1", "value": "0x0"}, "1774": {"op": "DUP1"}, "1775": {"op": "REVERT"}, "1776": {"op": "JUMPDEST"}, "1777": {"op": "POP"}, "1778": {"op": "PUSH2", "value": "0x6FD"}, "1781": {"op": "DUP6"}, "1782": {"op": "DUP3"}, "1783": {"op": "DUP7"}, "1784": {"op": "ADD"}, "1785": {"op": "PUSH2", "value": "0x616"}, "1788": {"jump": "i", "op": "JUMP"}, "1789": {"op": "JUMPDEST"}, "1790": {"op": "SWAP2"}, "1791": {"op": "POP"}, "1792": {"op": "POP"}, "1793": {"op": "SWAP3"}, "1794": {"op": "POP"}, "1795": {"op": "SWAP3"}, "1796": {"op": "SWAP1"}, "1797": {"op": "POP"}, "1798": {"jump": "o", "op": "JUMP"}, "1799": {"op": "JUMPDEST"}, "1800": {"op": "PUSH1", "value": "0x0"}, "1802": {"op": "PUSH1", "value": "0x20"}, "1804": {"op": "DUP3"}, "1805": {"op": "DUP5"}, "1806": {"op": "SUB"}, "1807": {"op": "SLT"}, "1808": {"op": "ISZERO"}, "1809": {"op": "PUSH2", "value": "0x719"}, "1812": {"op": "JUMPI"}, "1813": {"op": "PUSH1", "value": "0x0"}, "1815": {"op": "DUP1"}, "1816": {"op": "REVERT"}, "1817": {"op": "JUMPDEST"}, "1818": {"op": "DUP2"}, "1819": {"op": "CALLDATALOAD"}, "1820": {"op": "PUSH8", "value": "0xFFFFFFFFFFFFFFFF"}, "1829": {"op": "DUP2"}, "1830": {"op": "GT"}, "1831": {"op": "ISZERO"}, "1832": {"op": "PUSH2", "value": "0x730"}, "1835": {"op": "JUMPI"}, "1836": {"op": "PUSH1", "value": "0x0"}, "1838": {"op": "DUP1"}, "1839": {"op": "REVERT"}, "1840": {"op": "JUMPDEST"}, "1841": {"op": "PUSH2", "value": "0x73C"}, "1844": {"op": "DUP5"}, "1845": {"op": "DUP3"}, "1846": {"op": "DUP6"}, "1847": {"op": "ADD"}, "1848": {"op": "PUSH2", "value": "0x616"}, "1851": {"jump": "i", "op": "JUMP"}, "1852": {"op": "JUMPDEST"}, "1853": {"op": "SWAP5"}, "1854": {"op": "SWAP4"}, "1855": {"op": "POP"}, "1856": {"op": "POP"}, "1857": {"op": "POP"}, "1858": {"op": "POP"}, "1859": {"jump": "o", "op": "JUMP"}, "1860": {"op": "JUMPDEST"}, "1861": {"op": "PUSH1", "value": "0x0"}, "1863": {"op": "JUMPDEST"}, "1864": {"op": "DUP4"}, "1865": {"op": "DUP2"}, "1866": {"op": "LT"}, "1867": {"op": "ISZERO"}, "1868": {"op": "PUSH2", "value": "0x75F"}, "1871": {"op": "JUMPI"}, "1872": {"op": "DUP2"}, "1873": {"op": "DUP2"}, "1874": {"op": "ADD"}, "1875": {"op": "MLOAD"}, "1876": {"op": "DUP4"}, "1877": {"op": "DUP3"}, "1878": {"op": "ADD"}, "1879": {"op": "MSTORE"}, "1880": {"op": "PUSH1", "value": "0x20"}, "1882": {"op": "ADD"}, "1883": {"op": "PUSH2", "value": "0x747"}, "1886": {"op": "JUMP"}, "1887": {"op": "JUMPDEST"}, "1888": {"op": "DUP4"}, "1889": {"op": "DUP2"}, "1890": {"op": "GT"}, "1891": {"op": "ISZERO"}, "1892": {"op": "PUSH2", "value": "0x76E"}, "1895": {"op": "JUMPI"}, "1896": {"op": "PUSH1", "value": "0x0"}, "1898": {"op": "DUP5"}, "1899": {"op": "DUP5"}, "1900": {"op": "ADD"}, "1901": {"op": "MSTORE"}, "1902": {"op": "JUMPDEST"}, "1903": {"op": "POP"}, "1904": {"op": "POP"}, "1905": {"op": "POP"}, "1906": {"op": "POP"}, "1907": {"jump": "o", "op": "JUMP"}, "1908": {"op": "JUMPDEST"}, "1909": {"op": "PUSH1", "value": "0x20"}, "1911": {"op": "DUP2"}, "1912": {"op": "MSTORE"}, "1913": {"op": "PUSH1", "value": "0x0"}, "1915": {"op": "DUP3"}, "1916": {"op": "MLOAD"}, "1917": {"op": "DUP1"}, "1918": {"op": "PUSH1", "value": "0x20"}, "1920": {"op": "DUP5"}, "1921": {"op": "ADD"}, "1922": {"op": "MSTORE"}, "1923": {"op": "PUSH2", "value": "0x793"}, "1926": {"op": "DUP2"}, "1927": {"op": "PUSH1", "value": "0x40"}, "1929": {"op": "DUP6"}, "1930": {"op": "ADD"}, "1931": {"op": "PUSH1", "value": "0x20"}, "1933": {"op": "DUP8"}, "1934": {"op": "ADD"}, "1935": {"op": "PUSH2", "value": "0x744"}, "1938": {"jump": "i", "op": "JUMP"}, "1939": {"op": "JUMPDEST"}, "1940": {"op": "PUSH1", "value": "0x1F"}, "1942": {"op": "ADD"}, "1943": {"op": "PUSH1", "value": "0x1F"}, "1945": {"op": "NOT"}, "1946": {"op": "AND"}, "1947": {"op": "SWAP2"}, "1948": {"op": "SWAP1"}, "1949": {"op": "SWAP2"}, "1950": {"op": "ADD"}, "1951": {"op": "PUSH1", "value": "0x40"}, "1953": {"op": "ADD"}, "1954": {"op": "SWAP3"}, "1955": {"op": "SWAP2"}, "1956": {"op": "POP"}, "1957": {"op": "POP"}, "1958": {"jump": "o", "op": "JUMP"}, "1959": {"op": "JUMPDEST"}, "1960": {"op": "PUSH1", "value": "0x0"}, "1962": {"op": "PUSH1", "value": "0x20"}, "1964": {"op": "DUP3"}, "1965": {"op": "DUP5"}, "1966": {"op": "SUB"}, "1967": {"op": "SLT"}, "1968": {"op": "ISZERO"}, "1969": {"op": "PUSH2", "value": "0x7B9"}, "1972": {"op": "JUMPI"}, "1973": {"op": "PUSH1", "value": "0x0"}, "1975": {"op": "DUP1"}, "1976": {"op": "REVERT"}, "1977": {"op": "JUMPDEST"}, "1978": {"op": "DUP2"}, "1979": {"op": "CALLDATALOAD"}, "1980": {"op": "PUSH1", "value": "0x1"}, "1982": {"op": "PUSH1", "value": "0x1"}, "1984": {"op": "PUSH1", "value": "0xA0"}, "1986": {"op": "SHL"}, "1987": {"op": "SUB"}, "1988": {"op": "DUP2"}, "1989": {"op": "AND"}, "1990": {"op": "DUP2"}, "1991": {"op": "EQ"}, "1992": {"op": "PUSH2", "value": "0x7D0"}, "1995": {"op": "JUMPI"}, "1996": {"op": "PUSH1", "value": "0x0"}, "1998": {"op": "DUP1"}, "1999": {"op": "REVERT"}, "2000": {"op": "JUMPDEST"}, "2001": {"op": "SWAP4"}, "2002": {"op": "SWAP3"}, "2003": {"op": "POP"}, "2004": {"op": "POP"}, "2005": {"op": "POP"}, "2006": {"jump": "o", "op": "JUMP"}, "2007": {"op": "JUMPDEST"}, "2008": {"op": "PUSH1", "value": "0x20"}, "2010": {"op": "DUP1"}, "2011": {"op": "DUP3"}, "2012": {"op": "MSTORE"}, "2013": {"op": "DUP2"}, "2014": {"op": "DUP2"}, "2015": {"op": "ADD"}, "2016": {"op": "MSTORE"}, "2017": {"op": "PUSH32", "value": "0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"}, "2050": {"op": "PUSH1", "value": "0x40"}, "2052": {"op": "DUP3"}, "2053": {"op": "ADD"}, "2054": {"op": "MSTORE"}, "2055": {"op": "PUSH1", "value": "0x60"}, "2057": {"op": "ADD"}, "2058": {"op": "SWAP1"}, "2059": {"jump": "o", "op": "JUMP"}, "2060": {"op": "JUMPDEST"}, "2061": {"op": "PUSH1", "value": "0x0"}, "2063": {"op": "DUP3"}, "2064": {"op": "MLOAD"}, "2065": {"op": "PUSH2", "value": "0x81E"}, "2068": {"op": "DUP2"}, "2069": {"op": "DUP5"}, "2070": {"op": "PUSH1", "value": "0x20"}, "2072": {"op": "DUP8"}, "2073": {"op": "ADD"}, "2074": {"op": "PUSH2", "value": "0x744"}, "2077": {"jump": "i", "op": "JUMP"}, "2078": {"op": "JUMPDEST"}, "2079": {"op": "SWAP2"}, "2080": {"op": "SWAP1"}, "2081": {"op": "SWAP2"}, "2082": {"op": "ADD"}, "2083": {"op": "SWAP3"}, "2084": {"op": "SWAP2"}, "2085": {"op": "POP"}, "2086": {"op": "POP"}, "2087": {"jump": "o", "op": "JUMP"}, "2088": {"op": "JUMPDEST"}, "2089": {"op": "PUSH1", "value": "0x20"}, "2091": {"op": "DUP1"}, "2092": {"op": "DUP3"}, "2093": {"op": "MSTORE"}, "2094": {"op": "PUSH1", "value": "0x11"}, "2096": {"op": "SWAP1"}, "2097": {"op": "DUP3"}, "2098": {"op": "ADD"}, "2099": {"op": "MSTORE"}, "2100": {"op": "PUSH17", "value": "0x4E6F2050617469656E7420466F756E6421"}, "2118": {"op": "PUSH1", "value": "0x78"}, "2120": {"op": "SHL"}, "2121": {"op": "PUSH1", "value": "0x40"}, "2123": {"op": "DUP3"}, "2124": {"op": "ADD"}, "2125": {"op": "MSTORE"}, "2126": {"op": "PUSH1", "value": "0x60"}, "2128": {"op": "ADD"}, "2129": {"op": "SWAP1"}, "2130": {"jump": "o", "op": "JUMP"}, "2131": {"op": "JUMPDEST"}, "2132": {"op": "PUSH1", "value": "0x1"}, "2134": {"op": "DUP2"}, "2135": {"op": "DUP2"}, "2136": {"op": "SHR"}, "2137": {"op": "SWAP1"}, "2138": {"op": "DUP3"}, "2139": {"op": "AND"}, "2140": {"op": "DUP1"}, "2141": {"op": "PUSH2", "value": "0x867"}, "2144": {"op": "JUMPI"}, "2145": {"op": "PUSH1", "value": "0x7F"}, "2147": {"op": "DUP3"}, "2148": {"op": "AND"}, "2149": {"op": "SWAP2"}, "2150": {"op": "POP"}, "2151": {"op": "JUMPDEST"}, "2152": {"op": "PUSH1", "value": "0x20"}, "2154": {"op": "DUP3"}, "2155": {"op": "LT"}, "2156": {"op": "DUP2"}, "2157": {"op": "EQ"}, "2158": {"op": "ISZERO"}, "2159": {"op": "PUSH2", "value": "0x888"}, "2162": {"op": "JUMPI"}, "2163": {"op": "PUSH4", "value": "0x4E487B71"}, "2168": {"op": "PUSH1", "value": "0xE0"}, "2170": {"op": "SHL"}, "2171": {"op": "PUSH1", "value": "0x0"}, "2173": {"op": "MSTORE"}, "2174": {"op": "PUSH1", "value": "0x22"}, "2176": {"op": "PUSH1", "value": "0x4"}, "2178": {"op": "MSTORE"}, "2179": {"op": "PUSH1", "value": "0x24"}, "2181": {"op": "PUSH1", "value": "0x0"}, "2183": {"op": "REVERT"}, "2184": {"op": "JUMPDEST"}, "2185": {"op": "POP"}, "2186": {"op": "SWAP2"}, "2187": {"op": "SWAP1"}, "2188": {"op": "POP"}, "2189": {"jump": "o", "op": "JUMP"}}, "sha1": "fc690dd1300c074d26bd26dacf9fb392d8b45c2b", "source": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8;\n\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\n\ncontract EMR is Ownable {\n    struct UserDetails {\n        string privateKey;\n        string hashData;\n        bool isActive;\n    }\n\n    event RetrieveHashData(address indexed _from, string indexed _ethToken);\n    event RetrievePrivateKey(address indexed _from, string indexed _ethToken);\n\n    mapping(string => UserDetails) patient; // Unique Token to UserDetails\n\n    function getUserKey(string memory _ehToken)\n        public\n        returns (string memory)\n    {\n        require(patient[_ehToken].isActive, \"No Patient Found!\");\n        emit RetrievePrivateKey(msg.sender, _ehToken);\n        return patient[_ehToken].privateKey;\n    }\n\n    function getUserHashData(string memory _ehToken)\n        public\n        returns (string memory)\n    {\n        require(patient[_ehToken].isActive, \"No Patient Found!\");\n        emit RetrieveHashData(msg.sender, _ehToken);\n        return patient[_ehToken].hashData;\n    }\n\n    function addUserKey(string memory _ehToken, string memory _privateKey)\n        public\n        onlyOwner\n    {\n        patient[_ehToken].privateKey = _privateKey;\n        patient[_ehToken].isActive = true;\n    }\n\n    function addUserHash(string memory _ehToken, string memory _userHash)\n        public\n        onlyOwner\n    {\n        // require userKey\n        require(patient[_ehToken].isActive, \"No Patient Found!\");\n        patient[_ehToken].hashData = _userHash;\n    }\n}\n", "sourceMap": "110:1392:2:-:0;;;;;;;;;;;;-1:-1:-1;921:32:0;719:10:1;921:18:0;:32::i;:::-;110:1392:2;;2270:187:0;2343:16;2362:6;;-1:-1:-1;;;;;2378:17:0;;;-1:-1:-1;;;;;;2378:17:0;;;;;;2410:40;;2362:6;;;;;;;2410:40;;2343:16;2410:40;2333:124;2270:187;:::o;110:1392:2:-;;;;;;;", "sourcePath": "contracts/EMR.sol", "type": "contract", "deployment": {"address": "0x92c2f0FAB83F0E7429AdACfcAAd0912Cf461aeEA", "chainid": "4", "blockHeight": 10565241}}